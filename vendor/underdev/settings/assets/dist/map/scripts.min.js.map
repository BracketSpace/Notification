{"version":3,"sources":["vendor/selectize.js","admin.js"],"names":["root","factory","define","amd","exports","module","Sifter","this","items","settings","diacritics","prototype","tokenize","query","trim","String","toLowerCase","length","i","n","regex","letter","tokens","words","split","escape_regex","DIACRITICS","hasOwnProperty","replace","RegExp","push","string","iterator","object","callback","is_array","Array","forEach","key","apply","getScoreFunction","search","options","self","fields","token_count","nesting","prepareSearch","scoreValue","value","token","score","pos","scoreObject","field_count","data","getattr","sum","conjunction","getSortFunction","field","fields_count","multiplier","multipliers","get_field","implicit_score","sort","sort_empty","name","result","id","unshift","direction","splice","a","b","cmp","extend","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","item","filter","limit","slice","asciifold","k","arguments","obj","names","shift","str","isArray","$","Object","toString","call","c","d","e","f","g","h","j","l","o","p","q","r","s","t","u","v","w","x","y","z","chunk","foreignletters","lookup","substring","charAt","regexp","foreignletter","MicroPlugin","mixin","Interface","plugins","initializePlugins","queue","requested","loaded","utils","require","loadPlugin","plugin","Error","fn","vArg","Selectize","jQuery","highlight","$element","pattern","node","skip","nodeType","match","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","each","removeHighlight","find","firstChild","nodeName","parent","normalize","end","MicroEvent","on","event","fct","_events","off","indexOf","trigger","destObject","props","IS_MAC","navigator","userAgent","KEY_CMD","KEY_CTRL","SUPPORTS_VALIDITY_API","window","validity","isset","hash_key","escape_html","hook","before","method","original","after","once","called","debounce","delay","timeout","args","clearTimeout","setTimeout","debounce_events","types","type","event_args","watchChildEvent","$parent","selector","child","target","currentTarget","getSelection","input","start","selectionStart","selectionEnd","selection","focus","sel","createRange","selLen","text","moveStart","transferStyles","$from","$to","properties","styles","css","measureString","$test","position","top","left","width","padding","whiteSpace","appendTo","remove","autoGrow","$input","currentWidth","update","keyCode","printable","placeholder","character","metaKey","altKey","force","val","shiftKey","fromCharCode","toUpperCase","attr","triggerHandler","domToString","tmp","innerHTML","dir","selectize","computedStyle","getComputedStyle","getPropertyValue","currentStyle","parents","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isOpen","isDisabled","isRequired","is","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","renderCache","onSearchChange","loadThrottle","sifter","registerOption","registerOptionGroup","mode","maxItems","hideSelected","setupCallbacks","setupTemplates","setup","message","console","error","component","explanation","group","groupEnd","$wrapper","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","inputId","$window","$document","addClass","wrapperClass","inputClass","dropdownParent","dropdownClass","hide","dropdownContentClass","copyClassesToDropdown","style","join","splitOn","delimiter","delimiterEscaped","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","click","onClick","stopPropagation","keydown","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","resize","positionDropdown","blur","onBlur","onFocus","paste","onPaste","has","revertSettings","$children","children","detach","tabindex","setValue","preventDefault","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","disable","onChange","preload","field_label","labelField","field_optgroup","optgroupLabelField","templates","optgroup","html","optgroup_header","escape","option","option_create","render","callbacks","initialize","change","item_add","item_remove","clear","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","load","defaultPrevented","isDefaultPrevented","close","open","setActiveItem","isFull","pastedText","splitInput","createItem","which","create","selectAll","ctrlKey","$next","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","refreshOptions","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","createOnBlur","$target","hasClass","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","Math","max","addOption","removeClass","getValue","silent","addItems","$item","eventName","idx","begin","swap","$last","hideInput","$option","scroll","animate","height_menu","height_item","scroll_top","scroll_bottom","height","outerHeight","scrollTop","offset","stop","scrollDuration","opacity","getSearchOptions","sortField","searchField","searchConjunction","calculateScore","triggerDropdown","groups","groups_order","option_html","html_children","has_create_option","$active","$active_before","$create","active_before","maxOptions","min","optgroupField","createDocumentFragment","lockOptgroupOrder","$order","dom","canCreate","prepend","addPrecedence","valueField","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","getElementWithValue","$options","index","eq","$els","getAttribute","values","isPending","value_next","wasFull","insertAtCaret","persist","caret","lock","unlock","output","refreshValidityState","refreshClasses","invalid","prop","toggleClass","isEmptyObject","opts","label","removeAttr","visibility","display","outerWidth","$el","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","advanceCaret","$adj","$child","append","enable","destroy","show","removeData","body","templateName","cache","clearCache","createFilter","defaults","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_optgroup_label","field_optgroup_value","init_textbox","settings_element","data_raw","JSON","parse","init_select","optionsMap","readData","arr","$optgroup","tag_name","support","sortable","forcePlaceholderSize","disabled","ui","helper","overflow","active","title","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","closest","prev","next","getScrollbarWidth","div","doc","offsetWidth","clientWidth","removeChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","innerWidth","round","thisRef","html_container","html_element","context","render_item","ready"],"mappings":"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","file":"../js/scripts.min.js","sourcesContent":["/**\r\n * sifter.js\r\n * Copyright (c) 2013 Brian Reavis & contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n * @author Brian Reavis <brian@thirdroute.com>\r\n */\r\n\r\n(function(root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine('sifter', factory);\r\n\t} else if (typeof exports === 'object') {\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\troot.Sifter = factory();\r\n\t}\r\n}(this, function() {\r\n\r\n\t/**\r\n\t * Textually searches arrays and hashes of objects\r\n\t * by property (or multiple properties). Designed\r\n\t * specifically for autocomplete.\r\n\t *\r\n\t * @constructor\r\n\t * @param {array|object} items\r\n\t * @param {object} items\r\n\t */\r\n\tvar Sifter = function(items, settings) {\r\n\t\tthis.items = items;\r\n\t\tthis.settings = settings || {diacritics: true};\r\n\t};\r\n\r\n\t/**\r\n\t * Splits a search string into an array of individual\r\n\t * regexps to be used to match results.\r\n\t *\r\n\t * @param {string} query\r\n\t * @returns {array}\r\n\t */\r\n\tSifter.prototype.tokenize = function(query) {\r\n\t\tquery = trim(String(query || '').toLowerCase());\r\n\t\tif (!query || !query.length) return [];\r\n\r\n\t\tvar i, n, regex, letter;\r\n\t\tvar tokens = [];\r\n\t\tvar words = query.split(/ +/);\r\n\r\n\t\tfor (i = 0, n = words.length; i < n; i++) {\r\n\t\t\tregex = escape_regex(words[i]);\r\n\t\t\tif (this.settings.diacritics) {\r\n\t\t\t\tfor (letter in DIACRITICS) {\r\n\t\t\t\t\tif (DIACRITICS.hasOwnProperty(letter)) {\r\n\t\t\t\t\t\tregex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttokens.push({\r\n\t\t\t\tstring : words[i],\r\n\t\t\t\tregex  : new RegExp(regex, 'i')\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn tokens;\r\n\t};\r\n\r\n\t/**\r\n\t * Iterates over arrays and hashes.\r\n\t *\r\n\t * ```\r\n\t * this.iterator(this.items, function(item, id) {\r\n\t *    // invoked for each item\r\n\t * });\r\n\t * ```\r\n\t *\r\n\t * @param {array|object} object\r\n\t */\r\n\tSifter.prototype.iterator = function(object, callback) {\r\n\t\tvar iterator;\r\n\t\tif (is_array(object)) {\r\n\t\t\titerator = Array.prototype.forEach || function(callback) {\r\n\t\t\t\tfor (var i = 0, n = this.length; i < n; i++) {\r\n\t\t\t\t\tcallback(this[i], i, this);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\titerator = function(callback) {\r\n\t\t\t\tfor (var key in this) {\r\n\t\t\t\t\tif (this.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tcallback(this[key], key, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\titerator.apply(object, [callback]);\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a function to be used to score individual results.\r\n\t *\r\n\t * Good matches will have a higher score than poor matches.\r\n\t * If an item is not a match, 0 will be returned by the function.\r\n\t *\r\n\t * @param {object|string} search\r\n\t * @param {object} options (optional)\r\n\t * @returns {function}\r\n\t */\r\n\tSifter.prototype.getScoreFunction = function(search, options) {\r\n\t\tvar self, fields, tokens, token_count, nesting;\r\n\r\n\t\tself        = this;\r\n\t\tsearch      = self.prepareSearch(search, options);\r\n\t\ttokens      = search.tokens;\r\n\t\tfields      = search.options.fields;\r\n\t\ttoken_count = tokens.length;\r\n\t\tnesting     = search.options.nesting;\r\n\r\n\t\t/**\r\n\t\t * Calculates how close of a match the\r\n\t\t * given value is against a search token.\r\n\t\t *\r\n\t\t * @param {mixed} value\r\n\t\t * @param {object} token\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\tvar scoreValue = function(value, token) {\r\n\t\t\tvar score, pos;\r\n\r\n\t\t\tif (!value) return 0;\r\n\t\t\tvalue = String(value || '');\r\n\t\t\tpos = value.search(token.regex);\r\n\t\t\tif (pos === -1) return 0;\r\n\t\t\tscore = token.string.length / value.length;\r\n\t\t\tif (pos === 0) score += 0.5;\r\n\t\t\treturn score;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Calculates the score of an object\r\n\t\t * against the search query.\r\n\t\t *\r\n\t\t * @param {object} token\r\n\t\t * @param {object} data\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\tvar scoreObject = (function() {\r\n\t\t\tvar field_count = fields.length;\r\n\t\t\tif (!field_count) {\r\n\t\t\t\treturn function() { return 0; };\r\n\t\t\t}\r\n\t\t\tif (field_count === 1) {\r\n\t\t\t\treturn function(token, data) {\r\n\t\t\t\t\treturn scoreValue(getattr(data, fields[0], nesting), token);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn function(token, data) {\r\n\t\t\t\tfor (var i = 0, sum = 0; i < field_count; i++) {\r\n\t\t\t\t\tsum += scoreValue(getattr(data, fields[i], nesting), token);\r\n\t\t\t\t}\r\n\t\t\t\treturn sum / field_count;\r\n\t\t\t};\r\n\t\t})();\r\n\r\n\t\tif (!token_count) {\r\n\t\t\treturn function() { return 0; };\r\n\t\t}\r\n\t\tif (token_count === 1) {\r\n\t\t\treturn function(data) {\r\n\t\t\t\treturn scoreObject(tokens[0], data);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (search.options.conjunction === 'and') {\r\n\t\t\treturn function(data) {\r\n\t\t\t\tvar score;\r\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\r\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\r\n\t\t\t\t\tif (score <= 0) return 0;\r\n\t\t\t\t\tsum += score;\r\n\t\t\t\t}\r\n\t\t\t\treturn sum / token_count;\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn function(data) {\r\n\t\t\t\tfor (var i = 0, sum = 0; i < token_count; i++) {\r\n\t\t\t\t\tsum += scoreObject(tokens[i], data);\r\n\t\t\t\t}\r\n\t\t\t\treturn sum / token_count;\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a function that can be used to compare two\r\n\t * results, for sorting purposes. If no sorting should\r\n\t * be performed, `null` will be returned.\r\n\t *\r\n\t * @param {string|object} search\r\n\t * @param {object} options\r\n\t * @return function(a,b)\r\n\t */\r\n\tSifter.prototype.getSortFunction = function(search, options) {\r\n\t\tvar i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\r\n\r\n\t\tself   = this;\r\n\t\tsearch = self.prepareSearch(search, options);\r\n\t\tsort   = (!search.query && options.sort_empty) || options.sort;\r\n\r\n\t\t/**\r\n\t\t * Fetches the specified sort field value\r\n\t\t * from a search result item.\r\n\t\t *\r\n\t\t * @param  {string} name\r\n\t\t * @param  {object} result\r\n\t\t * @return {mixed}\r\n\t\t */\r\n\t\tget_field = function(name, result) {\r\n\t\t\tif (name === '$score') return result.score;\r\n\t\t\treturn getattr(self.items[result.id], name, options.nesting);\r\n\t\t};\r\n\r\n\t\t// parse options\r\n\t\tfields = [];\r\n\t\tif (sort) {\r\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\r\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\r\n\t\t\t\t\tfields.push(sort[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// the \"$score\" field is implied to be the primary\r\n\t\t// sort field, unless it's manually specified\r\n\t\tif (search.query) {\r\n\t\t\timplicit_score = true;\r\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\r\n\t\t\t\tif (fields[i].field === '$score') {\r\n\t\t\t\t\timplicit_score = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (implicit_score) {\r\n\t\t\t\tfields.unshift({field: '$score', direction: 'desc'});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (i = 0, n = fields.length; i < n; i++) {\r\n\t\t\t\tif (fields[i].field === '$score') {\r\n\t\t\t\t\tfields.splice(i, 1);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmultipliers = [];\r\n\t\tfor (i = 0, n = fields.length; i < n; i++) {\r\n\t\t\tmultipliers.push(fields[i].direction === 'desc' ? -1 : 1);\r\n\t\t}\r\n\r\n\t\t// build function\r\n\t\tfields_count = fields.length;\r\n\t\tif (!fields_count) {\r\n\t\t\treturn null;\r\n\t\t} else if (fields_count === 1) {\r\n\t\t\tfield = fields[0].field;\r\n\t\t\tmultiplier = multipliers[0];\r\n\t\t\treturn function(a, b) {\r\n\t\t\t\treturn multiplier * cmp(\r\n\t\t\t\t\tget_field(field, a),\r\n\t\t\t\t\tget_field(field, b)\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn function(a, b) {\r\n\t\t\t\tvar i, result, a_value, b_value, field;\r\n\t\t\t\tfor (i = 0; i < fields_count; i++) {\r\n\t\t\t\t\tfield = fields[i].field;\r\n\t\t\t\t\tresult = multipliers[i] * cmp(\r\n\t\t\t\t\t\tget_field(field, a),\r\n\t\t\t\t\t\tget_field(field, b)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (result) return result;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Parses a search query and returns an object\r\n\t * with tokens and fields ready to be populated\r\n\t * with results.\r\n\t *\r\n\t * @param {string} query\r\n\t * @param {object} options\r\n\t * @returns {object}\r\n\t */\r\n\tSifter.prototype.prepareSearch = function(query, options) {\r\n\t\tif (typeof query === 'object') return query;\r\n\r\n\t\toptions = extend({}, options);\r\n\r\n\t\tvar option_fields     = options.fields;\r\n\t\tvar option_sort       = options.sort;\r\n\t\tvar option_sort_empty = options.sort_empty;\r\n\r\n\t\tif (option_fields && !is_array(option_fields)) options.fields = [option_fields];\r\n\t\tif (option_sort && !is_array(option_sort)) options.sort = [option_sort];\r\n\t\tif (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\r\n\r\n\t\treturn {\r\n\t\t\toptions : options,\r\n\t\t\tquery   : String(query || '').toLowerCase(),\r\n\t\t\ttokens  : this.tokenize(query),\r\n\t\t\ttotal   : 0,\r\n\t\t\titems   : []\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Searches through all items and returns a sorted array of matches.\r\n\t *\r\n\t * The `options` parameter can contain:\r\n\t *\r\n\t *   - fields {string|array}\r\n\t *   - sort {array}\r\n\t *   - score {function}\r\n\t *   - filter {bool}\r\n\t *   - limit {integer}\r\n\t *\r\n\t * Returns an object containing:\r\n\t *\r\n\t *   - options {object}\r\n\t *   - query {string}\r\n\t *   - tokens {array}\r\n\t *   - total {int}\r\n\t *   - items {array}\r\n\t *\r\n\t * @param {string} query\r\n\t * @param {object} options\r\n\t * @returns {object}\r\n\t */\r\n\tSifter.prototype.search = function(query, options) {\r\n\t\tvar self = this, value, score, search, calculateScore;\r\n\t\tvar fn_sort;\r\n\t\tvar fn_score;\r\n\r\n\t\tsearch  = this.prepareSearch(query, options);\r\n\t\toptions = search.options;\r\n\t\tquery   = search.query;\r\n\r\n\t\t// generate result scoring function\r\n\t\tfn_score = options.score || self.getScoreFunction(search);\r\n\r\n\t\t// perform search and sort\r\n\t\tif (query.length) {\r\n\t\t\tself.iterator(self.items, function(item, id) {\r\n\t\t\t\tscore = fn_score(item);\r\n\t\t\t\tif (options.filter === false || score > 0) {\r\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tself.iterator(self.items, function(item, id) {\r\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfn_sort = self.getSortFunction(search, options);\r\n\t\tif (fn_sort) search.items.sort(fn_sort);\r\n\r\n\t\t// apply limits\r\n\t\tsearch.total = search.items.length;\r\n\t\tif (typeof options.limit === 'number') {\r\n\t\t\tsearch.items = search.items.slice(0, options.limit);\r\n\t\t}\r\n\r\n\t\treturn search;\r\n\t};\r\n\r\n\t// utilities\r\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n\tvar cmp = function(a, b) {\r\n\t\tif (typeof a === 'number' && typeof b === 'number') {\r\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\r\n\t\t}\r\n\t\ta = asciifold(String(a || ''));\r\n\t\tb = asciifold(String(b || ''));\r\n\t\tif (a > b) return 1;\r\n\t\tif (b > a) return -1;\r\n\t\treturn 0;\r\n\t};\r\n\r\n\tvar extend = function(a, b) {\r\n\t\tvar i, n, k, object;\r\n\t\tfor (i = 1, n = arguments.length; i < n; i++) {\r\n\t\t\tobject = arguments[i];\r\n\t\t\tif (!object) continue;\r\n\t\t\tfor (k in object) {\r\n\t\t\t\tif (object.hasOwnProperty(k)) {\r\n\t\t\t\t\ta[k] = object[k];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\r\n\t/**\r\n\t * A property getter resolving dot-notation\r\n\t * @param  {Object}  obj     The root object to fetch property on\r\n\t * @param  {String}  name    The optionally dotted property name to fetch\r\n\t * @param  {Boolean} nesting Handle nesting or not\r\n\t * @return {Object}          The resolved property value\r\n\t */\r\n\tvar getattr = function(obj, name, nesting) {\r\n\t    if (!obj || !name) return;\r\n\t    if (!nesting) return obj[name];\r\n\t    var names = name.split(\".\");\r\n\t    while(names.length && (obj = obj[names.shift()]));\r\n\t    return obj;\r\n\t};\r\n\r\n\tvar trim = function(str) {\r\n\t\treturn (str + '').replace(/^\\s+|\\s+$|/g, '');\r\n\t};\r\n\r\n\tvar escape_regex = function(str) {\r\n\t\treturn (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n\t};\r\n\r\n\tvar is_array = Array.isArray || (typeof $ !== 'undefined' && $.isArray) || function(object) {\r\n\t\treturn Object.prototype.toString.call(object) === '[object Array]';\r\n\t};\r\n\r\n\tvar DIACRITICS = {\r\n\t\t'a': '[aḀḁĂăÂâǍǎȺⱥȦȧẠạÄäÀàÁáĀāÃãÅåąĄÃąĄ]',\r\n\t\t'b': '[b␢βΒB฿𐌁ᛒ]',\r\n\t\t'c': '[cĆćĈĉČčĊċC̄c̄ÇçḈḉȻȼƇƈɕᴄＣｃ]',\r\n\t\t'd': '[dĎďḊḋḐḑḌḍḒḓḎḏĐđD̦d̦ƉɖƊɗƋƌᵭᶁᶑȡᴅＤｄð]',\r\n\t\t'e': '[eÉéÈèÊêḘḙĚěĔĕẼẽḚḛẺẻĖėËëĒēȨȩĘęᶒɆɇȄȅẾếỀềỄễỂểḜḝḖḗḔḕȆȇẸẹỆệⱸᴇＥｅɘǝƏƐε]',\r\n\t\t'f': '[fƑƒḞḟ]',\r\n\t\t'g': '[gɢ₲ǤǥĜĝĞğĢģƓɠĠġ]',\r\n\t\t'h': '[hĤĥĦħḨḩẖẖḤḥḢḣɦʰǶƕ]',\r\n\t\t'i': '[iÍíÌìĬĭÎîǏǐÏïḮḯĨĩĮįĪīỈỉȈȉȊȋỊịḬḭƗɨɨ̆ᵻᶖİiIıɪＩｉ]',\r\n\t\t'j': '[jȷĴĵɈɉʝɟʲ]',\r\n\t\t'k': '[kƘƙꝀꝁḰḱǨǩḲḳḴḵκϰ₭]',\r\n\t\t'l': '[lŁłĽľĻļĹĺḶḷḸḹḼḽḺḻĿŀȽƚⱠⱡⱢɫɬᶅɭȴʟＬｌ]',\r\n\t\t'n': '[nŃńǸǹŇňÑñṄṅŅņṆṇṊṋṈṉN̈n̈ƝɲȠƞᵰᶇɳȵɴＮｎŊŋ]',\r\n\t\t'o': '[oØøÖöÓóÒòÔôǑǒŐőŎŏȮȯỌọƟɵƠơỎỏŌōÕõǪǫȌȍՕօ]',\r\n\t\t'p': '[pṔṕṖṗⱣᵽƤƥᵱ]',\r\n\t\t'q': '[qꝖꝗʠɊɋꝘꝙq̃]',\r\n\t\t'r': '[rŔŕɌɍŘřŖŗṘṙȐȑȒȓṚṛⱤɽ]',\r\n\t\t's': '[sŚśṠṡṢṣꞨꞩŜŝŠšŞşȘșS̈s̈]',\r\n\t\t't': '[tŤťṪṫŢţṬṭƮʈȚțṰṱṮṯƬƭ]',\r\n\t\t'u': '[uŬŭɄʉỤụÜüÚúÙùÛûǓǔŰűŬŭƯưỦủŪūŨũŲųȔȕ∪]',\r\n\t\t'v': '[vṼṽṾṿƲʋꝞꝟⱱʋ]',\r\n\t\t'w': '[wẂẃẀẁŴŵẄẅẆẇẈẉ]',\r\n\t\t'x': '[xẌẍẊẋχ]',\r\n\t\t'y': '[yÝýỲỳŶŷŸÿỸỹẎẏỴỵɎɏƳƴ]',\r\n\t\t'z': '[zŹźẐẑŽžŻżẒẓẔẕƵƶ]'\r\n\t};\r\n\r\n\tvar asciifold = (function() {\r\n\t\tvar i, n, k, chunk;\r\n\t\tvar foreignletters = '';\r\n\t\tvar lookup = {};\r\n\t\tfor (k in DIACRITICS) {\r\n\t\t\tif (DIACRITICS.hasOwnProperty(k)) {\r\n\t\t\t\tchunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\r\n\t\t\t\tforeignletters += chunk;\r\n\t\t\t\tfor (i = 0, n = chunk.length; i < n; i++) {\r\n\t\t\t\t\tlookup[chunk.charAt(i)] = k;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar regexp = new RegExp('[' +  foreignletters + ']', 'g');\r\n\t\treturn function(str) {\r\n\t\t\treturn str.replace(regexp, function(foreignletter) {\r\n\t\t\t\treturn lookup[foreignletter];\r\n\t\t\t}).toLowerCase();\r\n\t\t};\r\n\t})();\r\n\r\n\r\n\t// export\r\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n\treturn Sifter;\r\n}));\r\n\r\n\r\n\r\n/**\r\n * microplugin.js\r\n * Copyright (c) 2013 Brian Reavis & contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n * @author Brian Reavis <brian@thirdroute.com>\r\n */\r\n\r\n(function(root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine('microplugin', factory);\r\n\t} else if (typeof exports === 'object') {\r\n\t\tmodule.exports = factory();\r\n\t} else {\r\n\t\troot.MicroPlugin = factory();\r\n\t}\r\n}(this, function() {\r\n\tvar MicroPlugin = {};\r\n\r\n\tMicroPlugin.mixin = function(Interface) {\r\n\t\tInterface.plugins = {};\r\n\r\n\t\t/**\r\n\t\t * Initializes the listed plugins (with options).\r\n\t\t * Acceptable formats:\r\n\t\t *\r\n\t\t * List (without options):\r\n\t\t *   ['a', 'b', 'c']\r\n\t\t *\r\n\t\t * List (with options):\r\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\r\n\t\t *\r\n\t\t * Hash (with options):\r\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\r\n\t\t *\r\n\t\t * @param {mixed} plugins\r\n\t\t */\r\n\t\tInterface.prototype.initializePlugins = function(plugins) {\r\n\t\t\tvar i, n, key;\r\n\t\t\tvar self  = this;\r\n\t\t\tvar queue = [];\r\n\r\n\t\t\tself.plugins = {\r\n\t\t\t\tnames     : [],\r\n\t\t\t\tsettings  : {},\r\n\t\t\t\trequested : {},\r\n\t\t\t\tloaded    : {}\r\n\t\t\t};\r\n\r\n\t\t\tif (utils.isArray(plugins)) {\r\n\t\t\t\tfor (i = 0, n = plugins.length; i < n; i++) {\r\n\t\t\t\t\tif (typeof plugins[i] === 'string') {\r\n\t\t\t\t\t\tqueue.push(plugins[i]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.plugins.settings[plugins[i].name] = plugins[i].options;\r\n\t\t\t\t\t\tqueue.push(plugins[i].name);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (plugins) {\r\n\t\t\t\tfor (key in plugins) {\r\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\r\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\r\n\t\t\t\t\t\tqueue.push(key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twhile (queue.length) {\r\n\t\t\t\tself.require(queue.shift());\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tInterface.prototype.loadPlugin = function(name) {\r\n\t\t\tvar self    = this;\r\n\t\t\tvar plugins = self.plugins;\r\n\t\t\tvar plugin  = Interface.plugins[name];\r\n\r\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\r\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\r\n\t\t\t}\r\n\r\n\t\t\tplugins.requested[name] = true;\r\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\r\n\t\t\tplugins.names.push(name);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initializes a plugin.\r\n\t\t *\r\n\t\t * @param {string} name\r\n\t\t */\r\n\t\tInterface.prototype.require = function(name) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar plugins = self.plugins;\r\n\r\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\r\n\t\t\t\tif (plugins.requested[name]) {\r\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\r\n\t\t\t\t}\r\n\t\t\t\tself.loadPlugin(name);\r\n\t\t\t}\r\n\r\n\t\t\treturn plugins.loaded[name];\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Registers a plugin.\r\n\t\t *\r\n\t\t * @param {string} name\r\n\t\t * @param {function} fn\r\n\t\t */\r\n\t\tInterface.define = function(name, fn) {\r\n\t\t\tInterface.plugins[name] = {\r\n\t\t\t\t'name' : name,\r\n\t\t\t\t'fn'   : fn\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\r\n\tvar utils = {\r\n\t\tisArray: Array.isArray || function(vArg) {\r\n\t\t\treturn Object.prototype.toString.call(vArg) === '[object Array]';\r\n\t\t}\r\n\t};\r\n\r\n\treturn MicroPlugin;\r\n}));\r\n\r\n/**\r\n * selectize.js (v0.12.4)\r\n * Copyright (c) 2013–2015 Brian Reavis & contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\r\n * file except in compliance with the License. You may obtain a copy of the License at:\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\r\n * ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n *\r\n * @author Brian Reavis <brian@thirdroute.com>\r\n */\r\n\r\n/*jshint curly:false */\r\n/*jshint browser:true */\r\n\r\n(function(root, factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine('selectize', ['jquery','sifter','microplugin'], factory);\r\n\t} else if (typeof exports === 'object') {\r\n\t\tmodule.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\r\n\t} else {\r\n\t\troot.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\r\n\t}\r\n}(this, function($, Sifter, MicroPlugin) {\r\n\t'use strict';\r\n\r\n\tvar highlight = function($element, pattern) {\r\n\t\tif (typeof pattern === 'string' && !pattern.length) return;\r\n\t\tvar regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\r\n\t\r\n\t\tvar highlight = function(node) {\r\n\t\t\tvar skip = 0;\r\n\t\t\tif (node.nodeType === 3) {\r\n\t\t\t\tvar pos = node.data.search(regex);\r\n\t\t\t\tif (pos >= 0 && node.data.length > 0) {\r\n\t\t\t\t\tvar match = node.data.match(regex);\r\n\t\t\t\t\tvar spannode = document.createElement('span');\r\n\t\t\t\t\tspannode.className = 'highlight';\r\n\t\t\t\t\tvar middlebit = node.splitText(pos);\r\n\t\t\t\t\tvar endbit = middlebit.splitText(match[0].length);\r\n\t\t\t\t\tvar middleclone = middlebit.cloneNode(true);\r\n\t\t\t\t\tspannode.appendChild(middleclone);\r\n\t\t\t\t\tmiddlebit.parentNode.replaceChild(spannode, middlebit);\r\n\t\t\t\t\tskip = 1;\r\n\t\t\t\t}\r\n\t\t\t} else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\r\n\t\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\r\n\t\t\t\t\ti += highlight(node.childNodes[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn skip;\r\n\t\t};\r\n\t\r\n\t\treturn $element.each(function() {\r\n\t\t\thighlight(this);\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * removeHighlight fn copied from highlight v5 and\r\n\t * edited to remove with() and pass js strict mode\r\n\t */\r\n\t$.fn.removeHighlight = function() {\r\n\t\treturn this.find(\"span.highlight\").each(function() {\r\n\t\t\tthis.parentNode.firstChild.nodeName;\r\n\t\t\tvar parent = this.parentNode;\r\n\t\t\tparent.replaceChild(this.firstChild, this);\r\n\t\t\tparent.normalize();\r\n\t\t}).end();\r\n\t};\r\n\t\r\n\t\r\n\tvar MicroEvent = function() {};\r\n\tMicroEvent.prototype = {\r\n\t\ton: function(event, fct){\r\n\t\t\tthis._events = this._events || {};\r\n\t\t\tthis._events[event] = this._events[event] || [];\r\n\t\t\tthis._events[event].push(fct);\r\n\t\t},\r\n\t\toff: function(event, fct){\r\n\t\t\tvar n = arguments.length;\r\n\t\t\tif (n === 0) return delete this._events;\r\n\t\t\tif (n === 1) return delete this._events[event];\r\n\t\r\n\t\t\tthis._events = this._events || {};\r\n\t\t\tif (event in this._events === false) return;\r\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\r\n\t\t},\r\n\t\ttrigger: function(event /* , args... */){\r\n\t\t\tthis._events = this._events || {};\r\n\t\t\tif (event in this._events === false) return;\r\n\t\t\tfor (var i = 0; i < this._events[event].length; i++){\r\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin will delegate all MicroEvent.js function in the destination object.\r\n\t *\r\n\t * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\r\n\t *\r\n\t * @param {object} the object which will support MicroEvent\r\n\t */\r\n\tMicroEvent.mixin = function(destObject){\r\n\t\tvar props = ['on', 'off', 'trigger'];\r\n\t\tfor (var i = 0; i < props.length; i++){\r\n\t\t\tdestObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\r\n\t\t}\r\n\t};\r\n\t\r\n\tvar IS_MAC        = /Mac/.test(navigator.userAgent);\r\n\t\r\n\tvar KEY_A         = 65;\r\n\tvar KEY_COMMA     = 188;\r\n\tvar KEY_RETURN    = 13;\r\n\tvar KEY_ESC       = 27;\r\n\tvar KEY_LEFT      = 37;\r\n\tvar KEY_UP        = 38;\r\n\tvar KEY_P         = 80;\r\n\tvar KEY_RIGHT     = 39;\r\n\tvar KEY_DOWN      = 40;\r\n\tvar KEY_N         = 78;\r\n\tvar KEY_BACKSPACE = 8;\r\n\tvar KEY_DELETE    = 46;\r\n\tvar KEY_SHIFT     = 16;\r\n\tvar KEY_CMD       = IS_MAC ? 91 : 17;\r\n\tvar KEY_CTRL      = IS_MAC ? 18 : 17;\r\n\tvar KEY_TAB       = 9;\r\n\t\r\n\tvar TAG_SELECT    = 1;\r\n\tvar TAG_INPUT     = 2;\r\n\t\r\n\t// for now, android support in general is too spotty to support validity\r\n\tvar SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('input').validity;\r\n\t\r\n\t\r\n\tvar isset = function(object) {\r\n\t\treturn typeof object !== 'undefined';\r\n\t};\r\n\t\r\n\t/**\r\n\t * Converts a scalar to its best string representation\r\n\t * for hash keys and HTML attribute values.\r\n\t *\r\n\t * Transformations:\r\n\t *   'str'     -> 'str'\r\n\t *   null      -> ''\r\n\t *   undefined -> ''\r\n\t *   true      -> '1'\r\n\t *   false     -> '0'\r\n\t *   0         -> '0'\r\n\t *   1         -> '1'\r\n\t *\r\n\t * @param {string} value\r\n\t * @returns {string|null}\r\n\t */\r\n\tvar hash_key = function(value) {\r\n\t\tif (typeof value === 'undefined' || value === null) return null;\r\n\t\tif (typeof value === 'boolean') return value ? '1' : '0';\r\n\t\treturn value + '';\r\n\t};\r\n\t\r\n\t/**\r\n\t * Escapes a string for use within HTML.\r\n\t *\r\n\t * @param {string} str\r\n\t * @returns {string}\r\n\t */\r\n\tvar escape_html = function(str) {\r\n\t\treturn (str + '')\r\n\t\t\t.replace(/&/g, '&amp;')\r\n\t\t\t.replace(/</g, '&lt;')\r\n\t\t\t.replace(/>/g, '&gt;')\r\n\t\t\t.replace(/\"/g, '&quot;');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Escapes \"$\" characters in replacement strings.\r\n\t *\r\n\t * @param {string} str\r\n\t * @returns {string}\r\n\t */\r\n\tvar escape_replace = function(str) {\r\n\t\treturn (str + '').replace(/\\$/g, '$$$$');\r\n\t};\r\n\t\r\n\tvar hook = {};\r\n\t\r\n\t/**\r\n\t * Wraps `method` on `self` so that `fn`\r\n\t * is invoked before the original method.\r\n\t *\r\n\t * @param {object} self\r\n\t * @param {string} method\r\n\t * @param {function} fn\r\n\t */\r\n\thook.before = function(self, method, fn) {\r\n\t\tvar original = self[method];\r\n\t\tself[method] = function() {\r\n\t\t\tfn.apply(self, arguments);\r\n\t\t\treturn original.apply(self, arguments);\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * Wraps `method` on `self` so that `fn`\r\n\t * is invoked after the original method.\r\n\t *\r\n\t * @param {object} self\r\n\t * @param {string} method\r\n\t * @param {function} fn\r\n\t */\r\n\thook.after = function(self, method, fn) {\r\n\t\tvar original = self[method];\r\n\t\tself[method] = function() {\r\n\t\t\tvar result = original.apply(self, arguments);\r\n\t\t\tfn.apply(self, arguments);\r\n\t\t\treturn result;\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * Wraps `fn` so that it can only be invoked once.\r\n\t *\r\n\t * @param {function} fn\r\n\t * @returns {function}\r\n\t */\r\n\tvar once = function(fn) {\r\n\t\tvar called = false;\r\n\t\treturn function() {\r\n\t\t\tif (called) return;\r\n\t\t\tcalled = true;\r\n\t\t\tfn.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * Wraps `fn` so that it can only be called once\r\n\t * every `delay` milliseconds (invoked on the falling edge).\r\n\t *\r\n\t * @param {function} fn\r\n\t * @param {int} delay\r\n\t * @returns {function}\r\n\t */\r\n\tvar debounce = function(fn, delay) {\r\n\t\tvar timeout;\r\n\t\treturn function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar args = arguments;\r\n\t\t\twindow.clearTimeout(timeout);\r\n\t\t\ttimeout = window.setTimeout(function() {\r\n\t\t\t\tfn.apply(self, args);\r\n\t\t\t}, delay);\r\n\t\t};\r\n\t};\r\n\t\r\n\t/**\r\n\t * Debounce all fired events types listed in `types`\r\n\t * while executing the provided `fn`.\r\n\t *\r\n\t * @param {object} self\r\n\t * @param {array} types\r\n\t * @param {function} fn\r\n\t */\r\n\tvar debounce_events = function(self, types, fn) {\r\n\t\tvar type;\r\n\t\tvar trigger = self.trigger;\r\n\t\tvar event_args = {};\r\n\t\r\n\t\t// override trigger method\r\n\t\tself.trigger = function() {\r\n\t\t\tvar type = arguments[0];\r\n\t\t\tif (types.indexOf(type) !== -1) {\r\n\t\t\t\tevent_args[type] = arguments;\r\n\t\t\t} else {\r\n\t\t\t\treturn trigger.apply(self, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t// invoke provided function\r\n\t\tfn.apply(self, []);\r\n\t\tself.trigger = trigger;\r\n\t\r\n\t\t// trigger queued events\r\n\t\tfor (type in event_args) {\r\n\t\t\tif (event_args.hasOwnProperty(type)) {\r\n\t\t\t\ttrigger.apply(self, event_args[type]);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t/**\r\n\t * A workaround for http://bugs.jquery.com/ticket/6696\r\n\t *\r\n\t * @param {object} $parent - Parent element to listen on.\r\n\t * @param {string} event - Event name.\r\n\t * @param {string} selector - Descendant selector to filter by.\r\n\t * @param {function} fn - Event handler.\r\n\t */\r\n\tvar watchChildEvent = function($parent, event, selector, fn) {\r\n\t\t$parent.on(event, selector, function(e) {\r\n\t\t\tvar child = e.target;\r\n\t\t\twhile (child && child.parentNode !== $parent[0]) {\r\n\t\t\t\tchild = child.parentNode;\r\n\t\t\t}\r\n\t\t\te.currentTarget = child;\r\n\t\t\treturn fn.apply(this, [e]);\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * Determines the current selection within a text input control.\r\n\t * Returns an object containing:\r\n\t *   - start\r\n\t *   - length\r\n\t *\r\n\t * @param {object} input\r\n\t * @returns {object}\r\n\t */\r\n\tvar getSelection = function(input) {\r\n\t\tvar result = {};\r\n\t\tif ('selectionStart' in input) {\r\n\t\t\tresult.start = input.selectionStart;\r\n\t\t\tresult.length = input.selectionEnd - result.start;\r\n\t\t} else if (document.selection) {\r\n\t\t\tinput.focus();\r\n\t\t\tvar sel = document.selection.createRange();\r\n\t\t\tvar selLen = document.selection.createRange().text.length;\r\n\t\t\tsel.moveStart('character', -input.value.length);\r\n\t\t\tresult.start = sel.text.length - selLen;\r\n\t\t\tresult.length = selLen;\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Copies CSS properties from one element to another.\r\n\t *\r\n\t * @param {object} $from\r\n\t * @param {object} $to\r\n\t * @param {array} properties\r\n\t */\r\n\tvar transferStyles = function($from, $to, properties) {\r\n\t\tvar i, n, styles = {};\r\n\t\tif (properties) {\r\n\t\t\tfor (i = 0, n = properties.length; i < n; i++) {\r\n\t\t\t\tstyles[properties[i]] = $from.css(properties[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstyles = $from.css();\r\n\t\t}\r\n\t\t$to.css(styles);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Measures the width of a string within a\r\n\t * parent element (in pixels).\r\n\t *\r\n\t * @param {string} str\r\n\t * @param {object} $parent\r\n\t * @returns {int}\r\n\t */\r\n\tvar measureString = function(str, $parent) {\r\n\t\tif (!str) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\r\n\t\tvar $test = $('<test>').css({\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: -99999,\r\n\t\t\tleft: -99999,\r\n\t\t\twidth: 'auto',\r\n\t\t\tpadding: 0,\r\n\t\t\twhiteSpace: 'pre'\r\n\t\t}).text(str).appendTo('body');\r\n\t\r\n\t\ttransferStyles($parent, $test, [\r\n\t\t\t'letterSpacing',\r\n\t\t\t'fontSize',\r\n\t\t\t'fontFamily',\r\n\t\t\t'fontWeight',\r\n\t\t\t'textTransform'\r\n\t\t]);\r\n\t\r\n\t\tvar width = $test.width();\r\n\t\t$test.remove();\r\n\t\r\n\t\treturn width;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sets up an input to grow horizontally as the user\r\n\t * types. If the value is changed manually, you can\r\n\t * trigger the \"update\" handler to resize:\r\n\t *\r\n\t * $input.trigger('update');\r\n\t *\r\n\t * @param {object} $input\r\n\t */\r\n\tvar autoGrow = function($input) {\r\n\t\tvar currentWidth = null;\r\n\t\r\n\t\tvar update = function(e, options) {\r\n\t\t\tvar value, keyCode, printable, placeholder, width;\r\n\t\t\tvar shift, character, selection;\r\n\t\t\te = e || window.event || {};\r\n\t\t\toptions = options || {};\r\n\t\r\n\t\t\tif (e.metaKey || e.altKey) return;\r\n\t\t\tif (!options.force && $input.data('grow') === false) return;\r\n\t\r\n\t\t\tvalue = $input.val();\r\n\t\t\tif (e.type && e.type.toLowerCase() === 'keydown') {\r\n\t\t\t\tkeyCode = e.keyCode;\r\n\t\t\t\tprintable = (\r\n\t\t\t\t\t(keyCode >= 97 && keyCode <= 122) || // a-z\r\n\t\t\t\t\t(keyCode >= 65 && keyCode <= 90)  || // A-Z\r\n\t\t\t\t\t(keyCode >= 48 && keyCode <= 57)  || // 0-9\r\n\t\t\t\t\tkeyCode === 32 // space\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\tif (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\r\n\t\t\t\t\tselection = getSelection($input[0]);\r\n\t\t\t\t\tif (selection.length) {\r\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\r\n\t\t\t\t\t} else if (keyCode === KEY_BACKSPACE && selection.start) {\r\n\t\t\t\t\t\tvalue = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\r\n\t\t\t\t\t} else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\r\n\t\t\t\t\t\tvalue = value.substring(0, selection.start) + value.substring(selection.start + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (printable) {\r\n\t\t\t\t\tshift = e.shiftKey;\r\n\t\t\t\t\tcharacter = String.fromCharCode(e.keyCode);\r\n\t\t\t\t\tif (shift) character = character.toUpperCase();\r\n\t\t\t\t\telse character = character.toLowerCase();\r\n\t\t\t\t\tvalue += character;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tplaceholder = $input.attr('placeholder');\r\n\t\t\tif (!value && placeholder) {\r\n\t\t\t\tvalue = placeholder;\r\n\t\t\t}\r\n\t\r\n\t\t\twidth = measureString(value, $input) + 4;\r\n\t\t\tif (width !== currentWidth) {\r\n\t\t\t\tcurrentWidth = width;\r\n\t\t\t\t$input.width(width);\r\n\t\t\t\t$input.triggerHandler('resize');\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t$input.on('keydown keyup update blur', update);\r\n\t\tupdate();\r\n\t};\r\n\t\r\n\tvar domToString = function(d) {\r\n\t\tvar tmp = document.createElement('div');\r\n\t\r\n\t\ttmp.appendChild(d.cloneNode(true));\r\n\t\r\n\t\treturn tmp.innerHTML;\r\n\t};\r\n\t\r\n\tvar logError = function(message, options){\r\n\t\tif(!options) options = {};\r\n\t\tvar component = \"Selectize\";\r\n\t\r\n\t\tconsole.error(component + \": \" + message)\r\n\t\r\n\t\tif(options.explanation){\r\n\t\t\t// console.group is undefined in <IE11\r\n\t\t\tif(console.group) console.group();\r\n\t\t\tconsole.error(options.explanation);\r\n\t\t\tif(console.group) console.groupEnd();\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tvar Selectize = function($input, settings) {\r\n\t\tvar key, i, n, dir, input, self = this;\r\n\t\tinput = $input[0];\r\n\t\tinput.selectize = self;\r\n\t\r\n\t\t// detect rtl environment\r\n\t\tvar computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\r\n\t\tdir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\r\n\t\tdir = dir || $input.parents('[dir]:first').attr('dir') || '';\r\n\t\r\n\t\t// setup default state\r\n\t\t$.extend(self, {\r\n\t\t\torder            : 0,\r\n\t\t\tsettings         : settings,\r\n\t\t\t$input           : $input,\r\n\t\t\ttabIndex         : $input.attr('tabindex') || '',\r\n\t\t\ttagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\r\n\t\t\trtl              : /rtl/i.test(dir),\r\n\t\r\n\t\t\teventNS          : '.selectize' + (++Selectize.count),\r\n\t\t\thighlightedValue : null,\r\n\t\t\tisOpen           : false,\r\n\t\t\tisDisabled       : false,\r\n\t\t\tisRequired       : $input.is('[required]'),\r\n\t\t\tisInvalid        : false,\r\n\t\t\tisLocked         : false,\r\n\t\t\tisFocused        : false,\r\n\t\t\tisInputHidden    : false,\r\n\t\t\tisSetup          : false,\r\n\t\t\tisShiftDown      : false,\r\n\t\t\tisCmdDown        : false,\r\n\t\t\tisCtrlDown       : false,\r\n\t\t\tignoreFocus      : false,\r\n\t\t\tignoreBlur       : false,\r\n\t\t\tignoreHover      : false,\r\n\t\t\thasOptions       : false,\r\n\t\t\tcurrentResults   : null,\r\n\t\t\tlastValue        : '',\r\n\t\t\tcaretPos         : 0,\r\n\t\t\tloading          : 0,\r\n\t\t\tloadedSearches   : {},\r\n\t\r\n\t\t\t$activeOption    : null,\r\n\t\t\t$activeItems     : [],\r\n\t\r\n\t\t\toptgroups        : {},\r\n\t\t\toptions          : {},\r\n\t\t\tuserOptions      : {},\r\n\t\t\titems            : [],\r\n\t\t\trenderCache      : {},\r\n\t\t\tonSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\r\n\t\t});\r\n\t\r\n\t\t// search system\r\n\t\tself.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\r\n\t\r\n\t\t// build options table\r\n\t\tif (self.settings.options) {\r\n\t\t\tfor (i = 0, n = self.settings.options.length; i < n; i++) {\r\n\t\t\t\tself.registerOption(self.settings.options[i]);\r\n\t\t\t}\r\n\t\t\tdelete self.settings.options;\r\n\t\t}\r\n\t\r\n\t\t// build optgroup table\r\n\t\tif (self.settings.optgroups) {\r\n\t\t\tfor (i = 0, n = self.settings.optgroups.length; i < n; i++) {\r\n\t\t\t\tself.registerOptionGroup(self.settings.optgroups[i]);\r\n\t\t\t}\r\n\t\t\tdelete self.settings.optgroups;\r\n\t\t}\r\n\t\r\n\t\t// option-dependent defaults\r\n\t\tself.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\r\n\t\tif (typeof self.settings.hideSelected !== 'boolean') {\r\n\t\t\tself.settings.hideSelected = self.settings.mode === 'multi';\r\n\t\t}\r\n\t\r\n\t\tself.initializePlugins(self.settings.plugins);\r\n\t\tself.setupCallbacks();\r\n\t\tself.setupTemplates();\r\n\t\tself.setup();\r\n\t};\r\n\t\r\n\t// mixins\r\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\t\r\n\tMicroEvent.mixin(Selectize);\r\n\t\r\n\tif(typeof MicroPlugin !== \"undefined\"){\r\n\t\tMicroPlugin.mixin(Selectize);\r\n\t}else{\r\n\t\tlogError(\"Dependency MicroPlugin is missing\",\r\n\t\t\t{explanation:\r\n\t\t\t\t\"Make sure you either: (1) are using the \\\"standalone\\\" \"+\r\n\t\t\t\t\"version of Selectize, or (2) require MicroPlugin before you \"+\r\n\t\t\t\t\"load Selectize.\"}\r\n\t\t);\r\n\t}\r\n\t\r\n\t\r\n\t// methods\r\n\t// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\t\r\n\t$.extend(Selectize.prototype, {\r\n\t\r\n\t\t/**\r\n\t\t * Creates all elements and sets up event bindings.\r\n\t\t */\r\n\t\tsetup: function() {\r\n\t\t\tvar self      = this;\r\n\t\t\tvar settings  = self.settings;\r\n\t\t\tvar eventNS   = self.eventNS;\r\n\t\t\tvar $window   = $(window);\r\n\t\t\tvar $document = $(document);\r\n\t\t\tvar $input    = self.$input;\r\n\t\r\n\t\t\tvar $wrapper;\r\n\t\t\tvar $control;\r\n\t\t\tvar $control_input;\r\n\t\t\tvar $dropdown;\r\n\t\t\tvar $dropdown_content;\r\n\t\t\tvar $dropdown_parent;\r\n\t\t\tvar inputMode;\r\n\t\t\tvar timeout_blur;\r\n\t\t\tvar timeout_focus;\r\n\t\t\tvar classes;\r\n\t\t\tvar classes_plugins;\r\n\t\t\tvar inputId;\r\n\t\r\n\t\t\tinputMode         = self.settings.mode;\r\n\t\t\tclasses           = $input.attr('class') || '';\r\n\t\r\n\t\t\t$wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\r\n\t\t\t$control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\r\n\t\t\t$control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\r\n\t\t\t$dropdown_parent  = $(settings.dropdownParent || $wrapper);\r\n\t\t\t$dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\r\n\t\t\t$dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\r\n\t\r\n\t\t\tif(inputId = $input.attr('id')) {\r\n\t\t\t\t$control_input.attr('id', inputId + '-selectized');\r\n\t\t\t\t$(\"label[for='\"+inputId+\"']\").attr('for', inputId + '-selectized');\r\n\t\t\t}\r\n\t\r\n\t\t\tif(self.settings.copyClassesToDropdown) {\r\n\t\t\t\t$dropdown.addClass(classes);\r\n\t\t\t}\r\n\t\r\n\t\t\t$wrapper.css({\r\n\t\t\t\twidth: $input[0].style.width\r\n\t\t\t});\r\n\t\r\n\t\t\tif (self.plugins.names.length) {\r\n\t\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\r\n\t\t\t\t$wrapper.addClass(classes_plugins);\r\n\t\t\t\t$dropdown.addClass(classes_plugins);\r\n\t\t\t}\r\n\t\r\n\t\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\r\n\t\t\t\t$input.attr('multiple', 'multiple');\r\n\t\t\t}\r\n\t\r\n\t\t\tif (self.settings.placeholder) {\r\n\t\t\t\t$control_input.attr('placeholder', settings.placeholder);\r\n\t\t\t}\r\n\t\r\n\t\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\r\n\t\t\tif (!self.settings.splitOn && self.settings.delimiter) {\r\n\t\t\t\tvar delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\t\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\r\n\t\t\t}\r\n\t\r\n\t\t\tif ($input.attr('autocorrect')) {\r\n\t\t\t\t$control_input.attr('autocorrect', $input.attr('autocorrect'));\r\n\t\t\t}\r\n\t\r\n\t\t\tif ($input.attr('autocapitalize')) {\r\n\t\t\t\t$control_input.attr('autocapitalize', $input.attr('autocapitalize'));\r\n\t\t\t}\r\n\t\r\n\t\t\tself.$wrapper          = $wrapper;\r\n\t\t\tself.$control          = $control;\r\n\t\t\tself.$control_input    = $control_input;\r\n\t\t\tself.$dropdown         = $dropdown;\r\n\t\t\tself.$dropdown_content = $dropdown_content;\r\n\t\r\n\t\t\t$dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\r\n\t\t\t$dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\r\n\t\t\twatchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\r\n\t\t\tautoGrow($control_input);\r\n\t\r\n\t\t\t$control.on({\r\n\t\t\t\tmousedown : function() { return self.onMouseDown.apply(self, arguments); },\r\n\t\t\t\tclick     : function() { return self.onClick.apply(self, arguments); }\r\n\t\t\t});\r\n\t\r\n\t\t\t$control_input.on({\r\n\t\t\t\tmousedown : function(e) { e.stopPropagation(); },\r\n\t\t\t\tkeydown   : function() { return self.onKeyDown.apply(self, arguments); },\r\n\t\t\t\tkeyup     : function() { return self.onKeyUp.apply(self, arguments); },\r\n\t\t\t\tkeypress  : function() { return self.onKeyPress.apply(self, arguments); },\r\n\t\t\t\tresize    : function() { self.positionDropdown.apply(self, []); },\r\n\t\t\t\tblur      : function() { return self.onBlur.apply(self, arguments); },\r\n\t\t\t\tfocus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\r\n\t\t\t\tpaste     : function() { return self.onPaste.apply(self, arguments); }\r\n\t\t\t});\r\n\t\r\n\t\t\t$document.on('keydown' + eventNS, function(e) {\r\n\t\t\t\tself.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\r\n\t\t\t\tself.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\r\n\t\t\t\tself.isShiftDown = e.shiftKey;\r\n\t\t\t});\r\n\t\r\n\t\t\t$document.on('keyup' + eventNS, function(e) {\r\n\t\t\t\tif (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\r\n\t\t\t\tif (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\r\n\t\t\t\tif (e.keyCode === KEY_CMD) self.isCmdDown = false;\r\n\t\t\t});\r\n\t\r\n\t\t\t$document.on('mousedown' + eventNS, function(e) {\r\n\t\t\t\tif (self.isFocused) {\r\n\t\t\t\t\t// prevent events on the dropdown scrollbar from causing the control to blur\r\n\t\t\t\t\tif (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// blur on click outside\r\n\t\t\t\t\tif (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\r\n\t\t\t\t\t\tself.blur(e.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\t$window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\r\n\t\t\t\tif (self.isOpen) {\r\n\t\t\t\t\tself.positionDropdown.apply(self, arguments);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t$window.on('mousemove' + eventNS, function() {\r\n\t\t\t\tself.ignoreHover = false;\r\n\t\t\t});\r\n\t\r\n\t\t\t// store original children and tab index so that they can be\r\n\t\t\t// restored when the destroy() method is called.\r\n\t\t\tthis.revertSettings = {\r\n\t\t\t\t$children : $input.children().detach(),\r\n\t\t\t\ttabindex  : $input.attr('tabindex')\r\n\t\t\t};\r\n\t\r\n\t\t\t$input.attr('tabindex', -1).hide().after(self.$wrapper);\r\n\t\r\n\t\t\tif ($.isArray(settings.items)) {\r\n\t\t\t\tself.setValue(settings.items);\r\n\t\t\t\tdelete settings.items;\r\n\t\t\t}\r\n\t\r\n\t\t\t// feature detect for the validation API\r\n\t\t\tif (SUPPORTS_VALIDITY_API) {\r\n\t\t\t\t$input.on('invalid' + eventNS, function(e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\tself.isInvalid = true;\r\n\t\t\t\t\tself.refreshState();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\r\n\t\t\tself.updateOriginalInput();\r\n\t\t\tself.refreshItems();\r\n\t\t\tself.refreshState();\r\n\t\t\tself.updatePlaceholder();\r\n\t\t\tself.isSetup = true;\r\n\t\r\n\t\t\tif ($input.is(':disabled')) {\r\n\t\t\t\tself.disable();\r\n\t\t\t}\r\n\t\r\n\t\t\tself.on('change', this.onChange);\r\n\t\r\n\t\t\t$input.data('selectize', self);\r\n\t\t\t$input.addClass('selectized');\r\n\t\t\tself.trigger('initialize');\r\n\t\r\n\t\t\t// preload options\r\n\t\t\tif (settings.preload === true) {\r\n\t\t\t\tself.onSearchChange('');\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Sets up default rendering functions.\r\n\t\t */\r\n\t\tsetupTemplates: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar field_label = self.settings.labelField;\r\n\t\t\tvar field_optgroup = self.settings.optgroupLabelField;\r\n\t\r\n\t\t\tvar templates = {\r\n\t\t\t\t'optgroup': function(data) {\r\n\t\t\t\t\treturn '<div class=\"optgroup\">' + data.html + '</div>';\r\n\t\t\t\t},\r\n\t\t\t\t'optgroup_header': function(data, escape) {\r\n\t\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\r\n\t\t\t\t},\r\n\t\t\t\t'option': function(data, escape) {\r\n\t\t\t\t\treturn '<div class=\"option\">' + escape(data[field_label]) + '</div>';\r\n\t\t\t\t},\r\n\t\t\t\t'item': function(data, escape) {\r\n\t\t\t\t\treturn '<div class=\"item\">' + escape(data[field_label]) + '</div>';\r\n\t\t\t\t},\r\n\t\t\t\t'option_create': function(data, escape) {\r\n\t\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\tself.settings.render = $.extend({}, templates, self.settings.render);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Maps fired events to callbacks provided\r\n\t\t * in the settings used when creating the control.\r\n\t\t */\r\n\t\tsetupCallbacks: function() {\r\n\t\t\tvar key, fn, callbacks = {\r\n\t\t\t\t'initialize'      : 'onInitialize',\r\n\t\t\t\t'change'          : 'onChange',\r\n\t\t\t\t'item_add'        : 'onItemAdd',\r\n\t\t\t\t'item_remove'     : 'onItemRemove',\r\n\t\t\t\t'clear'           : 'onClear',\r\n\t\t\t\t'option_add'      : 'onOptionAdd',\r\n\t\t\t\t'option_remove'   : 'onOptionRemove',\r\n\t\t\t\t'option_clear'    : 'onOptionClear',\r\n\t\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\r\n\t\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\r\n\t\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\r\n\t\t\t\t'dropdown_open'   : 'onDropdownOpen',\r\n\t\t\t\t'dropdown_close'  : 'onDropdownClose',\r\n\t\t\t\t'type'            : 'onType',\r\n\t\t\t\t'load'            : 'onLoad',\r\n\t\t\t\t'focus'           : 'onFocus',\r\n\t\t\t\t'blur'            : 'onBlur'\r\n\t\t\t};\r\n\t\r\n\t\t\tfor (key in callbacks) {\r\n\t\t\t\tif (callbacks.hasOwnProperty(key)) {\r\n\t\t\t\t\tfn = this.settings[callbacks[key]];\r\n\t\t\t\t\tif (fn) this.on(key, fn);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered when the main control element\r\n\t\t * has a click event.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tonClick: function(e) {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\t// necessary for mobile webkit devices (manual focus triggering\r\n\t\t\t// is ignored unless invoked within a click event)\r\n\t\t\tif (!self.isFocused) {\r\n\t\t\t\tself.focus();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered when the main control element\r\n\t\t * has a mouse down event.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tonMouseDown: function(e) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar defaultPrevented = e.isDefaultPrevented();\r\n\t\t\tvar $target = $(e.target);\r\n\t\r\n\t\t\tif (self.isFocused) {\r\n\t\t\t\t// retain focus by preventing native handling. if the\r\n\t\t\t\t// event target is the input it should not be modified.\r\n\t\t\t\t// otherwise, text selection within the input won't work.\r\n\t\t\t\tif (e.target !== self.$control_input[0]) {\r\n\t\t\t\t\tif (self.settings.mode === 'single') {\r\n\t\t\t\t\t\t// toggle dropdown\r\n\t\t\t\t\t\tself.isOpen ? self.close() : self.open();\r\n\t\t\t\t\t} else if (!defaultPrevented) {\r\n\t\t\t\t\t\tself.setActiveItem(null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// give control focus\r\n\t\t\t\tif (!defaultPrevented) {\r\n\t\t\t\t\twindow.setTimeout(function() {\r\n\t\t\t\t\t\tself.focus();\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered when the value of the control has been changed.\r\n\t\t * This should propagate the event to the original DOM\r\n\t\t * input / select element.\r\n\t\t */\r\n\t\tonChange: function() {\r\n\t\t\tthis.$input.trigger('change');\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered on <input> paste.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tonPaste: function(e) {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\t// If a regex or string is included, this will split the pasted\r\n\t\t\t// input and create Items for each separate value\r\n\t\t\tif (self.settings.splitOn) {\r\n\t\r\n\t\t\t\t// Wait for pasted text to be recognized in value\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tvar pastedText = self.$control_input.val();\r\n\t\t\t\t\tif(!pastedText.match(self.settings.splitOn)){ return }\r\n\t\r\n\t\t\t\t\tvar splitInput = $.trim(pastedText).split(self.settings.splitOn);\r\n\t\t\t\t\tfor (var i = 0, n = splitInput.length; i < n; i++) {\r\n\t\t\t\t\t\tself.createItem(splitInput[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered on <input> keypress.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tonKeyPress: function(e) {\r\n\t\t\tif (this.isLocked) return e && e.preventDefault();\r\n\t\t\tvar character = String.fromCharCode(e.keyCode || e.which);\r\n\t\t\tif (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\r\n\t\t\t\tthis.createItem();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered on <input> keydown.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tonKeyDown: function(e) {\r\n\t\t\tvar isInput = e.target === this.$control_input[0];\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (self.isLocked) {\r\n\t\t\t\tif (e.keyCode !== KEY_TAB) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tswitch (e.keyCode) {\r\n\t\t\t\tcase KEY_A:\r\n\t\t\t\t\tif (self.isCmdDown) {\r\n\t\t\t\t\t\tself.selectAll();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase KEY_ESC:\r\n\t\t\t\t\tif (self.isOpen) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\tself.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase KEY_N:\r\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\r\n\t\t\t\tcase KEY_DOWN:\r\n\t\t\t\t\tif (!self.isOpen && self.hasOptions) {\r\n\t\t\t\t\t\tself.open();\r\n\t\t\t\t\t} else if (self.$activeOption) {\r\n\t\t\t\t\t\tself.ignoreHover = true;\r\n\t\t\t\t\t\tvar $next = self.getAdjacentOption(self.$activeOption, 1);\r\n\t\t\t\t\t\tif ($next.length) self.setActiveOption($next, true, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase KEY_P:\r\n\t\t\t\t\tif (!e.ctrlKey || e.altKey) break;\r\n\t\t\t\tcase KEY_UP:\r\n\t\t\t\t\tif (self.$activeOption) {\r\n\t\t\t\t\t\tself.ignoreHover = true;\r\n\t\t\t\t\t\tvar $prev = self.getAdjacentOption(self.$activeOption, -1);\r\n\t\t\t\t\t\tif ($prev.length) self.setActiveOption($prev, true, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase KEY_RETURN:\r\n\t\t\t\t\tif (self.isOpen && self.$activeOption) {\r\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase KEY_LEFT:\r\n\t\t\t\t\tself.advanceSelection(-1, e);\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase KEY_RIGHT:\r\n\t\t\t\t\tself.advanceSelection(1, e);\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase KEY_TAB:\r\n\t\t\t\t\tif (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\r\n\t\t\t\t\t\tself.onOptionSelect({currentTarget: self.$activeOption});\r\n\t\r\n\t\t\t\t\t\t// Default behaviour is to jump to the next field, we only want this\r\n\t\t\t\t\t\t// if the current field doesn't accept any more entries\r\n\t\t\t\t\t\tif (!self.isFull()) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\tcase KEY_BACKSPACE:\r\n\t\t\t\tcase KEY_DELETE:\r\n\t\t\t\t\tself.deleteSelection(e);\r\n\t\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tif ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered on <input> keyup.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tonKeyUp: function(e) {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (self.isLocked) return e && e.preventDefault();\r\n\t\t\tvar value = self.$control_input.val() || '';\r\n\t\t\tif (self.lastValue !== value) {\r\n\t\t\t\tself.lastValue = value;\r\n\t\t\t\tself.onSearchChange(value);\r\n\t\t\t\tself.refreshOptions();\r\n\t\t\t\tself.trigger('type', value);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Invokes the user-provide option provider / loader.\r\n\t\t *\r\n\t\t * Note: this function is debounced in the Selectize\r\n\t\t * constructor (by `settings.loadThrottle` milliseconds)\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t */\r\n\t\tonSearchChange: function(value) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar fn = self.settings.load;\r\n\t\t\tif (!fn) return;\r\n\t\t\tif (self.loadedSearches.hasOwnProperty(value)) return;\r\n\t\t\tself.loadedSearches[value] = true;\r\n\t\t\tself.load(function(callback) {\r\n\t\t\t\tfn.apply(self, [value, callback]);\r\n\t\t\t});\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered on <input> focus.\r\n\t\t *\r\n\t\t * @param {object} e (optional)\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tonFocus: function(e) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar wasFocused = self.isFocused;\r\n\t\r\n\t\t\tif (self.isDisabled) {\r\n\t\t\t\tself.blur();\r\n\t\t\t\te && e.preventDefault();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (self.ignoreFocus) return;\r\n\t\t\tself.isFocused = true;\r\n\t\t\tif (self.settings.preload === 'focus') self.onSearchChange('');\r\n\t\r\n\t\t\tif (!wasFocused) self.trigger('focus');\r\n\t\r\n\t\t\tif (!self.$activeItems.length) {\r\n\t\t\t\tself.showInput();\r\n\t\t\t\tself.setActiveItem(null);\r\n\t\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\r\n\t\t\t}\r\n\t\r\n\t\t\tself.refreshState();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered on <input> blur.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @param {Element} dest\r\n\t\t */\r\n\t\tonBlur: function(e, dest) {\r\n\t\t\tvar self = this;\r\n\t\t\tif (!self.isFocused) return;\r\n\t\t\tself.isFocused = false;\r\n\t\r\n\t\t\tif (self.ignoreFocus) {\r\n\t\t\t\treturn;\r\n\t\t\t} else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\r\n\t\t\t\t// necessary to prevent IE closing the dropdown when the scrollbar is clicked\r\n\t\t\t\tself.ignoreBlur = true;\r\n\t\t\t\tself.onFocus(e);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar deactivate = function() {\r\n\t\t\t\tself.close();\r\n\t\t\t\tself.setTextboxValue('');\r\n\t\t\t\tself.setActiveItem(null);\r\n\t\t\t\tself.setActiveOption(null);\r\n\t\t\t\tself.setCaret(self.items.length);\r\n\t\t\t\tself.refreshState();\r\n\t\r\n\t\t\t\t// IE11 bug: element still marked as active\r\n\t\t\t\tdest && dest.focus && dest.focus();\r\n\t\r\n\t\t\t\tself.ignoreFocus = false;\r\n\t\t\t\tself.trigger('blur');\r\n\t\t\t};\r\n\t\r\n\t\t\tself.ignoreFocus = true;\r\n\t\t\tif (self.settings.create && self.settings.createOnBlur) {\r\n\t\t\t\tself.createItem(null, false, deactivate);\r\n\t\t\t} else {\r\n\t\t\t\tdeactivate();\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered when the user rolls over\r\n\t\t * an option in the autocomplete dropdown menu.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tonOptionHover: function(e) {\r\n\t\t\tif (this.ignoreHover) return;\r\n\t\t\tthis.setActiveOption(e.currentTarget, false);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered when the user clicks on an option\r\n\t\t * in the autocomplete dropdown menu.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tonOptionSelect: function(e) {\r\n\t\t\tvar value, $target, $option, self = this;\r\n\t\r\n\t\t\tif (e.preventDefault) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t}\r\n\t\r\n\t\t\t$target = $(e.currentTarget);\r\n\t\t\tif ($target.hasClass('create')) {\r\n\t\t\t\tself.createItem(null, function() {\r\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\r\n\t\t\t\t\t\tself.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tvalue = $target.attr('data-value');\r\n\t\t\t\tif (typeof value !== 'undefined') {\r\n\t\t\t\t\tself.lastQuery = null;\r\n\t\t\t\t\tself.setTextboxValue('');\r\n\t\t\t\t\tself.addItem(value);\r\n\t\t\t\t\tif (self.settings.closeAfterSelect) {\r\n\t\t\t\t\t\tself.close();\r\n\t\t\t\t\t} else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\r\n\t\t\t\t\t\tself.setActiveOption(self.getOption(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Triggered when the user clicks on an item\r\n\t\t * that has been selected.\r\n\t\t *\r\n\t\t * @param {object} e\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tonItemSelect: function(e) {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (self.isLocked) return;\r\n\t\t\tif (self.settings.mode === 'multi') {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tself.setActiveItem(e.currentTarget, e);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Invokes the provided method that provides\r\n\t\t * results to a callback---which are then added\r\n\t\t * as options to the control.\r\n\t\t *\r\n\t\t * @param {function} fn\r\n\t\t */\r\n\t\tload: function(fn) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\r\n\t\r\n\t\t\tself.loading++;\r\n\t\t\tfn.apply(self, [function(results) {\r\n\t\t\t\tself.loading = Math.max(self.loading - 1, 0);\r\n\t\t\t\tif (results && results.length) {\r\n\t\t\t\t\tself.addOption(results);\r\n\t\t\t\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\r\n\t\t\t\t}\r\n\t\t\t\tif (!self.loading) {\r\n\t\t\t\t\t$wrapper.removeClass(self.settings.loadingClass);\r\n\t\t\t\t}\r\n\t\t\t\tself.trigger('load', results);\r\n\t\t\t}]);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Sets the input field of the control to the specified value.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t */\r\n\t\tsetTextboxValue: function(value) {\r\n\t\t\tvar $input = this.$control_input;\r\n\t\t\tvar changed = $input.val() !== value;\r\n\t\t\tif (changed) {\r\n\t\t\t\t$input.val(value).triggerHandler('update');\r\n\t\t\t\tthis.lastValue = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Returns the value of the control. If multiple items\r\n\t\t * can be selected (e.g. <select multiple>), this returns\r\n\t\t * an array. If only one item can be selected, this\r\n\t\t * returns a string.\r\n\t\t *\r\n\t\t * @returns {mixed}\r\n\t\t */\r\n\t\tgetValue: function() {\r\n\t\t\tif (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\r\n\t\t\t\treturn this.items;\r\n\t\t\t} else {\r\n\t\t\t\treturn this.items.join(this.settings.delimiter);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Resets the selected items to the given value.\r\n\t\t *\r\n\t\t * @param {mixed} value\r\n\t\t */\r\n\t\tsetValue: function(value, silent) {\r\n\t\t\tvar events = silent ? [] : ['change'];\r\n\t\r\n\t\t\tdebounce_events(this, events, function() {\r\n\t\t\t\tthis.clear(silent);\r\n\t\t\t\tthis.addItems(value, silent);\r\n\t\t\t});\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Sets the selected item.\r\n\t\t *\r\n\t\t * @param {object} $item\r\n\t\t * @param {object} e (optional)\r\n\t\t */\r\n\t\tsetActiveItem: function($item, e) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar eventName;\r\n\t\t\tvar i, idx, begin, end, item, swap;\r\n\t\t\tvar $last;\r\n\t\r\n\t\t\tif (self.settings.mode === 'single') return;\r\n\t\t\t$item = $($item);\r\n\t\r\n\t\t\t// clear the active selection\r\n\t\t\tif (!$item.length) {\r\n\t\t\t\t$(self.$activeItems).removeClass('active');\r\n\t\t\t\tself.$activeItems = [];\r\n\t\t\t\tif (self.isFocused) {\r\n\t\t\t\t\tself.showInput();\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\t// modify selection\r\n\t\t\teventName = e && e.type.toLowerCase();\r\n\t\r\n\t\t\tif (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\r\n\t\t\t\t$last = self.$control.children('.active:last');\r\n\t\t\t\tbegin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\r\n\t\t\t\tend   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\r\n\t\t\t\tif (begin > end) {\r\n\t\t\t\t\tswap  = begin;\r\n\t\t\t\t\tbegin = end;\r\n\t\t\t\t\tend   = swap;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = begin; i <= end; i++) {\r\n\t\t\t\t\titem = self.$control[0].childNodes[i];\r\n\t\t\t\t\tif (self.$activeItems.indexOf(item) === -1) {\r\n\t\t\t\t\t\t$(item).addClass('active');\r\n\t\t\t\t\t\tself.$activeItems.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\te.preventDefault();\r\n\t\t\t} else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\r\n\t\t\t\tif ($item.hasClass('active')) {\r\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\r\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\r\n\t\t\t\t\t$item.removeClass('active');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.$activeItems.push($item.addClass('active')[0]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t$(self.$activeItems).removeClass('active');\r\n\t\t\t\tself.$activeItems = [$item.addClass('active')[0]];\r\n\t\t\t}\r\n\t\r\n\t\t\t// ensure control has focus\r\n\t\t\tself.hideInput();\r\n\t\t\tif (!this.isFocused) {\r\n\t\t\t\tself.focus();\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Sets the selected item in the dropdown menu\r\n\t\t * of available options.\r\n\t\t *\r\n\t\t * @param {object} $object\r\n\t\t * @param {boolean} scroll\r\n\t\t * @param {boolean} animate\r\n\t\t */\r\n\t\tsetActiveOption: function($option, scroll, animate) {\r\n\t\t\tvar height_menu, height_item, y;\r\n\t\t\tvar scroll_top, scroll_bottom;\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (self.$activeOption) self.$activeOption.removeClass('active');\r\n\t\t\tself.$activeOption = null;\r\n\t\r\n\t\t\t$option = $($option);\r\n\t\t\tif (!$option.length) return;\r\n\t\r\n\t\t\tself.$activeOption = $option.addClass('active');\r\n\t\r\n\t\t\tif (scroll || !isset(scroll)) {\r\n\t\r\n\t\t\t\theight_menu   = self.$dropdown_content.height();\r\n\t\t\t\theight_item   = self.$activeOption.outerHeight(true);\r\n\t\t\t\tscroll        = self.$dropdown_content.scrollTop() || 0;\r\n\t\t\t\ty             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\r\n\t\t\t\tscroll_top    = y;\r\n\t\t\t\tscroll_bottom = y - height_menu + height_item;\r\n\t\r\n\t\t\t\tif (y + height_item > height_menu + scroll) {\r\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\r\n\t\t\t\t} else if (y < scroll) {\r\n\t\t\t\t\tself.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Selects all items (CTRL + A).\r\n\t\t */\r\n\t\tselectAll: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tif (self.settings.mode === 'single') return;\r\n\t\r\n\t\t\tself.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\r\n\t\t\tif (self.$activeItems.length) {\r\n\t\t\t\tself.hideInput();\r\n\t\t\t\tself.close();\r\n\t\t\t}\r\n\t\t\tself.focus();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Hides the input element out of view, while\r\n\t\t * retaining its focus.\r\n\t\t */\r\n\t\thideInput: function() {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tself.setTextboxValue('');\r\n\t\t\tself.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\r\n\t\t\tself.isInputHidden = true;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Restores input visibility.\r\n\t\t */\r\n\t\tshowInput: function() {\r\n\t\t\tthis.$control_input.css({opacity: 1, position: 'relative', left: 0});\r\n\t\t\tthis.isInputHidden = false;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Gives the control focus.\r\n\t\t */\r\n\t\tfocus: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tif (self.isDisabled) return;\r\n\t\r\n\t\t\tself.ignoreFocus = true;\r\n\t\t\tself.$control_input[0].focus();\r\n\t\t\twindow.setTimeout(function() {\r\n\t\t\t\tself.ignoreFocus = false;\r\n\t\t\t\tself.onFocus();\r\n\t\t\t}, 0);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Forces the control out of focus.\r\n\t\t *\r\n\t\t * @param {Element} dest\r\n\t\t */\r\n\t\tblur: function(dest) {\r\n\t\t\tthis.$control_input[0].blur();\r\n\t\t\tthis.onBlur(null, dest);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Returns a function that scores an object\r\n\t\t * to show how good of a match it is to the\r\n\t\t * provided query.\r\n\t\t *\r\n\t\t * @param {string} query\r\n\t\t * @param {object} options\r\n\t\t * @return {function}\r\n\t\t */\r\n\t\tgetScoreFunction: function(query) {\r\n\t\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Returns search options for sifter (the system\r\n\t\t * for scoring and sorting results).\r\n\t\t *\r\n\t\t * @see https://github.com/brianreavis/sifter.js\r\n\t\t * @return {object}\r\n\t\t */\r\n\t\tgetSearchOptions: function() {\r\n\t\t\tvar settings = this.settings;\r\n\t\t\tvar sort = settings.sortField;\r\n\t\t\tif (typeof sort === 'string') {\r\n\t\t\t\tsort = [{field: sort}];\r\n\t\t\t}\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tfields      : settings.searchField,\r\n\t\t\t\tconjunction : settings.searchConjunction,\r\n\t\t\t\tsort        : sort\r\n\t\t\t};\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Searches through available options and returns\r\n\t\t * a sorted array of matches.\r\n\t\t *\r\n\t\t * Returns an object containing:\r\n\t\t *\r\n\t\t *   - query {string}\r\n\t\t *   - tokens {array}\r\n\t\t *   - total {int}\r\n\t\t *   - items {array}\r\n\t\t *\r\n\t\t * @param {string} query\r\n\t\t * @returns {object}\r\n\t\t */\r\n\t\tsearch: function(query) {\r\n\t\t\tvar i, value, score, result, calculateScore;\r\n\t\t\tvar self     = this;\r\n\t\t\tvar settings = self.settings;\r\n\t\t\tvar options  = this.getSearchOptions();\r\n\t\r\n\t\t\t// validate user-provided result scoring function\r\n\t\t\tif (settings.score) {\r\n\t\t\t\tcalculateScore = self.settings.score.apply(this, [query]);\r\n\t\t\t\tif (typeof calculateScore !== 'function') {\r\n\t\t\t\t\tthrow new Error('Selectize \"score\" setting must be a function that returns a function');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// perform search\r\n\t\t\tif (query !== self.lastQuery) {\r\n\t\t\t\tself.lastQuery = query;\r\n\t\t\t\tresult = self.sifter.search(query, $.extend(options, {score: calculateScore}));\r\n\t\t\t\tself.currentResults = result;\r\n\t\t\t} else {\r\n\t\t\t\tresult = $.extend(true, {}, self.currentResults);\r\n\t\t\t}\r\n\t\r\n\t\t\t// filter out selected items\r\n\t\t\tif (settings.hideSelected) {\r\n\t\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\r\n\t\t\t\t\t\tresult.items.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Refreshes the list of available options shown\r\n\t\t * in the autocomplete dropdown menu.\r\n\t\t *\r\n\t\t * @param {boolean} triggerDropdown\r\n\t\t */\r\n\t\trefreshOptions: function(triggerDropdown) {\r\n\t\t\tvar i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\r\n\t\t\tvar $active, $active_before, $create;\r\n\t\r\n\t\t\tif (typeof triggerDropdown === 'undefined') {\r\n\t\t\t\ttriggerDropdown = true;\r\n\t\t\t}\r\n\t\r\n\t\t\tvar self              = this;\r\n\t\t\tvar query             = $.trim(self.$control_input.val());\r\n\t\t\tvar results           = self.search(query);\r\n\t\t\tvar $dropdown_content = self.$dropdown_content;\r\n\t\t\tvar active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\r\n\t\r\n\t\t\t// build markup\r\n\t\t\tn = results.items.length;\r\n\t\t\tif (typeof self.settings.maxOptions === 'number') {\r\n\t\t\t\tn = Math.min(n, self.settings.maxOptions);\r\n\t\t\t}\r\n\t\r\n\t\t\t// render and group available options individually\r\n\t\t\tgroups = {};\r\n\t\t\tgroups_order = [];\r\n\t\r\n\t\t\tfor (i = 0; i < n; i++) {\r\n\t\t\t\toption      = self.options[results.items[i].id];\r\n\t\t\t\toption_html = self.render('option', option);\r\n\t\t\t\toptgroup    = option[self.settings.optgroupField] || '';\r\n\t\t\t\toptgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\r\n\t\r\n\t\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\r\n\t\t\t\t\toptgroup = optgroups[j];\r\n\t\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\r\n\t\t\t\t\t\toptgroup = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\r\n\t\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\r\n\t\t\t\t\t\tgroups_order.push(optgroup);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroups[optgroup].appendChild(option_html);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// sort optgroups\r\n\t\t\tif (this.settings.lockOptgroupOrder) {\r\n\t\t\t\tgroups_order.sort(function(a, b) {\r\n\t\t\t\t\tvar a_order = self.optgroups[a].$order || 0;\r\n\t\t\t\t\tvar b_order = self.optgroups[b].$order || 0;\r\n\t\t\t\t\treturn a_order - b_order;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\r\n\t\t\t// render optgroup headers & join groups\r\n\t\t\thtml = document.createDocumentFragment();\r\n\t\t\tfor (i = 0, n = groups_order.length; i < n; i++) {\r\n\t\t\t\toptgroup = groups_order[i];\r\n\t\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].childNodes.length) {\r\n\t\t\t\t\t// render the optgroup header and options within it,\r\n\t\t\t\t\t// then pass it to the wrapper template\r\n\t\t\t\t\thtml_children = document.createDocumentFragment();\r\n\t\t\t\t\thtml_children.appendChild(self.render('optgroup_header', self.optgroups[optgroup]));\r\n\t\t\t\t\thtml_children.appendChild(groups[optgroup]);\r\n\t\r\n\t\t\t\t\thtml.appendChild(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\r\n\t\t\t\t\t\thtml: domToString(html_children),\r\n\t\t\t\t\t\tdom:  html_children\r\n\t\t\t\t\t})));\r\n\t\t\t\t} else {\r\n\t\t\t\t\thtml.appendChild(groups[optgroup]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t$dropdown_content.html(html);\r\n\t\r\n\t\t\t// highlight matching terms inline\r\n\t\t\tif (self.settings.highlight && results.query.length && results.tokens.length) {\r\n\t\t\t\t$dropdown_content.removeHighlight();\r\n\t\t\t\tfor (i = 0, n = results.tokens.length; i < n; i++) {\r\n\t\t\t\t\thighlight($dropdown_content, results.tokens[i].regex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// add \"selected\" class to selected options\r\n\t\t\tif (!self.settings.hideSelected) {\r\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\r\n\t\t\t\t\tself.getOption(self.items[i]).addClass('selected');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// add create option\r\n\t\t\thas_create_option = self.canCreate(query);\r\n\t\t\tif (has_create_option) {\r\n\t\t\t\t$dropdown_content.prepend(self.render('option_create', {input: query}));\r\n\t\t\t\t$create = $($dropdown_content[0].childNodes[0]);\r\n\t\t\t}\r\n\t\r\n\t\t\t// activate\r\n\t\t\tself.hasOptions = results.items.length > 0 || has_create_option;\r\n\t\t\tif (self.hasOptions) {\r\n\t\t\t\tif (results.items.length > 0) {\r\n\t\t\t\t\t$active_before = active_before && self.getOption(active_before);\r\n\t\t\t\t\tif ($active_before && $active_before.length) {\r\n\t\t\t\t\t\t$active = $active_before;\r\n\t\t\t\t\t} else if (self.settings.mode === 'single' && self.items.length) {\r\n\t\t\t\t\t\t$active = self.getOption(self.items[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!$active || !$active.length) {\r\n\t\t\t\t\t\tif ($create && !self.settings.addPrecedence) {\r\n\t\t\t\t\t\t\t$active = self.getAdjacentOption($create, 1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$active = $dropdown_content.find('[data-selectable]:first');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$active = $create;\r\n\t\t\t\t}\r\n\t\t\t\tself.setActiveOption($active);\r\n\t\t\t\tif (triggerDropdown && !self.isOpen) { self.open(); }\r\n\t\t\t} else {\r\n\t\t\t\tself.setActiveOption(null);\r\n\t\t\t\tif (triggerDropdown && self.isOpen) { self.close(); }\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Adds an available option. If it already exists,\r\n\t\t * nothing will happen. Note: this does not refresh\r\n\t\t * the options list dropdown (use `refreshOptions`\r\n\t\t * for that).\r\n\t\t *\r\n\t\t * Usage:\r\n\t\t *\r\n\t\t *   this.addOption(data)\r\n\t\t *\r\n\t\t * @param {object|array} data\r\n\t\t */\r\n\t\taddOption: function(data) {\r\n\t\t\tvar i, n, value, self = this;\r\n\t\r\n\t\t\tif ($.isArray(data)) {\r\n\t\t\t\tfor (i = 0, n = data.length; i < n; i++) {\r\n\t\t\t\t\tself.addOption(data[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (value = self.registerOption(data)) {\r\n\t\t\t\tself.userOptions[value] = true;\r\n\t\t\t\tself.lastQuery = null;\r\n\t\t\t\tself.trigger('option_add', value, data);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Registers an option to the pool of options.\r\n\t\t *\r\n\t\t * @param {object} data\r\n\t\t * @return {boolean|string}\r\n\t\t */\r\n\t\tregisterOption: function(data) {\r\n\t\t\tvar key = hash_key(data[this.settings.valueField]);\r\n\t\t\tif (typeof key === 'undefined' || key === null || this.options.hasOwnProperty(key)) return false;\r\n\t\t\tdata.$order = data.$order || ++this.order;\r\n\t\t\tthis.options[key] = data;\r\n\t\t\treturn key;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Registers an option group to the pool of option groups.\r\n\t\t *\r\n\t\t * @param {object} data\r\n\t\t * @return {boolean|string}\r\n\t\t */\r\n\t\tregisterOptionGroup: function(data) {\r\n\t\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\r\n\t\t\tif (!key) return false;\r\n\t\r\n\t\t\tdata.$order = data.$order || ++this.order;\r\n\t\t\tthis.optgroups[key] = data;\r\n\t\t\treturn key;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Registers a new optgroup for options\r\n\t\t * to be bucketed into.\r\n\t\t *\r\n\t\t * @param {string} id\r\n\t\t * @param {object} data\r\n\t\t */\r\n\t\taddOptionGroup: function(id, data) {\r\n\t\t\tdata[this.settings.optgroupValueField] = id;\r\n\t\t\tif (id = this.registerOptionGroup(data)) {\r\n\t\t\t\tthis.trigger('optgroup_add', id, data);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Removes an existing option group.\r\n\t\t *\r\n\t\t * @param {string} id\r\n\t\t */\r\n\t\tremoveOptionGroup: function(id) {\r\n\t\t\tif (this.optgroups.hasOwnProperty(id)) {\r\n\t\t\t\tdelete this.optgroups[id];\r\n\t\t\t\tthis.renderCache = {};\r\n\t\t\t\tthis.trigger('optgroup_remove', id);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Clears all existing option groups.\r\n\t\t */\r\n\t\tclearOptionGroups: function() {\r\n\t\t\tthis.optgroups = {};\r\n\t\t\tthis.renderCache = {};\r\n\t\t\tthis.trigger('optgroup_clear');\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Updates an option available for selection. If\r\n\t\t * it is visible in the selected items or options\r\n\t\t * dropdown, it will be re-rendered automatically.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t * @param {object} data\r\n\t\t */\r\n\t\tupdateOption: function(value, data) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $item, $item_new;\r\n\t\t\tvar value_new, index_item, cache_items, cache_options, order_old;\r\n\t\r\n\t\t\tvalue     = hash_key(value);\r\n\t\t\tvalue_new = hash_key(data[self.settings.valueField]);\r\n\t\r\n\t\t\t// sanity checks\r\n\t\t\tif (value === null) return;\r\n\t\t\tif (!self.options.hasOwnProperty(value)) return;\r\n\t\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\r\n\t\r\n\t\t\torder_old = self.options[value].$order;\r\n\t\r\n\t\t\t// update references\r\n\t\t\tif (value_new !== value) {\r\n\t\t\t\tdelete self.options[value];\r\n\t\t\t\tindex_item = self.items.indexOf(value);\r\n\t\t\t\tif (index_item !== -1) {\r\n\t\t\t\t\tself.items.splice(index_item, 1, value_new);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdata.$order = data.$order || order_old;\r\n\t\t\tself.options[value_new] = data;\r\n\t\r\n\t\t\t// invalidate render cache\r\n\t\t\tcache_items = self.renderCache['item'];\r\n\t\t\tcache_options = self.renderCache['option'];\r\n\t\r\n\t\t\tif (cache_items) {\r\n\t\t\t\tdelete cache_items[value];\r\n\t\t\t\tdelete cache_items[value_new];\r\n\t\t\t}\r\n\t\t\tif (cache_options) {\r\n\t\t\t\tdelete cache_options[value];\r\n\t\t\t\tdelete cache_options[value_new];\r\n\t\t\t}\r\n\t\r\n\t\t\t// update the item if it's selected\r\n\t\t\tif (self.items.indexOf(value_new) !== -1) {\r\n\t\t\t\t$item = self.getItem(value);\r\n\t\t\t\t$item_new = $(self.render('item', data));\r\n\t\t\t\tif ($item.hasClass('active')) $item_new.addClass('active');\r\n\t\t\t\t$item.replaceWith($item_new);\r\n\t\t\t}\r\n\t\r\n\t\t\t// invalidate last query because we might have updated the sortField\r\n\t\t\tself.lastQuery = null;\r\n\t\r\n\t\t\t// update dropdown contents\r\n\t\t\tif (self.isOpen) {\r\n\t\t\t\tself.refreshOptions(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Removes a single option.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t * @param {boolean} silent\r\n\t\t */\r\n\t\tremoveOption: function(value, silent) {\r\n\t\t\tvar self = this;\r\n\t\t\tvalue = hash_key(value);\r\n\t\r\n\t\t\tvar cache_items = self.renderCache['item'];\r\n\t\t\tvar cache_options = self.renderCache['option'];\r\n\t\t\tif (cache_items) delete cache_items[value];\r\n\t\t\tif (cache_options) delete cache_options[value];\r\n\t\r\n\t\t\tdelete self.userOptions[value];\r\n\t\t\tdelete self.options[value];\r\n\t\t\tself.lastQuery = null;\r\n\t\t\tself.trigger('option_remove', value);\r\n\t\t\tself.removeItem(value, silent);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Clears all options.\r\n\t\t */\r\n\t\tclearOptions: function() {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tself.loadedSearches = {};\r\n\t\t\tself.userOptions = {};\r\n\t\t\tself.renderCache = {};\r\n\t\t\tself.options = self.sifter.items = {};\r\n\t\t\tself.lastQuery = null;\r\n\t\t\tself.trigger('option_clear');\r\n\t\t\tself.clear();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Returns the jQuery element of the option\r\n\t\t * matching the given value.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t * @returns {object}\r\n\t\t */\r\n\t\tgetOption: function(value) {\r\n\t\t\treturn this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Returns the jQuery element of the next or\r\n\t\t * previous selectable option.\r\n\t\t *\r\n\t\t * @param {object} $option\r\n\t\t * @param {int} direction  can be 1 for next or -1 for previous\r\n\t\t * @return {object}\r\n\t\t */\r\n\t\tgetAdjacentOption: function($option, direction) {\r\n\t\t\tvar $options = this.$dropdown.find('[data-selectable]');\r\n\t\t\tvar index    = $options.index($option) + direction;\r\n\t\r\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Finds the first element with a \"data-value\" attribute\r\n\t\t * that matches the given value.\r\n\t\t *\r\n\t\t * @param {mixed} value\r\n\t\t * @param {object} $els\r\n\t\t * @return {object}\r\n\t\t */\r\n\t\tgetElementWithValue: function(value, $els) {\r\n\t\t\tvalue = hash_key(value);\r\n\t\r\n\t\t\tif (typeof value !== 'undefined' && value !== null) {\r\n\t\t\t\tfor (var i = 0, n = $els.length; i < n; i++) {\r\n\t\t\t\t\tif ($els[i].getAttribute('data-value') === value) {\r\n\t\t\t\t\t\treturn $($els[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn $();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Returns the jQuery element of the item\r\n\t\t * matching the given value.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t * @returns {object}\r\n\t\t */\r\n\t\tgetItem: function(value) {\r\n\t\t\treturn this.getElementWithValue(value, this.$control.children());\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * \"Selects\" multiple items at once. Adds them to the list\r\n\t\t * at the current caret position.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t * @param {boolean} silent\r\n\t\t */\r\n\t\taddItems: function(values, silent) {\r\n\t\t\tvar items = $.isArray(values) ? values : [values];\r\n\t\t\tfor (var i = 0, n = items.length; i < n; i++) {\r\n\t\t\t\tthis.isPending = (i < n - 1);\r\n\t\t\t\tthis.addItem(items[i], silent);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * \"Selects\" an item. Adds it to the list\r\n\t\t * at the current caret position.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t * @param {boolean} silent\r\n\t\t */\r\n\t\taddItem: function(value, silent) {\r\n\t\t\tvar events = silent ? [] : ['change'];\r\n\t\r\n\t\t\tdebounce_events(this, events, function() {\r\n\t\t\t\tvar $item, $option, $options;\r\n\t\t\t\tvar self = this;\r\n\t\t\t\tvar inputMode = self.settings.mode;\r\n\t\t\t\tvar i, active, value_next, wasFull;\r\n\t\t\t\tvalue = hash_key(value);\r\n\t\r\n\t\t\t\tif (self.items.indexOf(value) !== -1) {\r\n\t\t\t\t\tif (inputMode === 'single') self.close();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (!self.options.hasOwnProperty(value)) return;\r\n\t\t\t\tif (inputMode === 'single') self.clear(silent);\r\n\t\t\t\tif (inputMode === 'multi' && self.isFull()) return;\r\n\t\r\n\t\t\t\t$item = $(self.render('item', self.options[value]));\r\n\t\t\t\twasFull = self.isFull();\r\n\t\t\t\tself.items.splice(self.caretPos, 0, value);\r\n\t\t\t\tself.insertAtCaret($item);\r\n\t\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\r\n\t\t\t\t\tself.refreshState();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (self.isSetup) {\r\n\t\t\t\t\t$options = self.$dropdown_content.find('[data-selectable]');\r\n\t\r\n\t\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\r\n\t\t\t\t\tif (!self.isPending) {\r\n\t\t\t\t\t\t$option = self.getOption(value);\r\n\t\t\t\t\t\tvalue_next = self.getAdjacentOption($option, 1).attr('data-value');\r\n\t\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\r\n\t\t\t\t\t\tif (value_next) {\r\n\t\t\t\t\t\t\tself.setActiveOption(self.getOption(value_next));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\r\n\t\t\t\t\tif (!$options.length || self.isFull()) {\r\n\t\t\t\t\t\tself.close();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.positionDropdown();\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tself.updatePlaceholder();\r\n\t\t\t\t\tself.trigger('item_add', value, $item);\r\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Removes the selected item matching\r\n\t\t * the provided value.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t */\r\n\t\tremoveItem: function(value, silent) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar $item, i, idx;\r\n\t\r\n\t\t\t$item = (value instanceof $) ? value : self.getItem(value);\r\n\t\t\tvalue = hash_key($item.attr('data-value'));\r\n\t\t\ti = self.items.indexOf(value);\r\n\t\r\n\t\t\tif (i !== -1) {\r\n\t\t\t\t$item.remove();\r\n\t\t\t\tif ($item.hasClass('active')) {\r\n\t\t\t\t\tidx = self.$activeItems.indexOf($item[0]);\r\n\t\t\t\t\tself.$activeItems.splice(idx, 1);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tself.items.splice(i, 1);\r\n\t\t\t\tself.lastQuery = null;\r\n\t\t\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\r\n\t\t\t\t\tself.removeOption(value, silent);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (i < self.caretPos) {\r\n\t\t\t\t\tself.setCaret(self.caretPos - 1);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tself.refreshState();\r\n\t\t\t\tself.updatePlaceholder();\r\n\t\t\t\tself.updateOriginalInput({silent: silent});\r\n\t\t\t\tself.positionDropdown();\r\n\t\t\t\tself.trigger('item_remove', value, $item);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Invokes the `create` method provided in the\r\n\t\t * selectize options that should provide the data\r\n\t\t * for the new item, given the user input.\r\n\t\t *\r\n\t\t * Once this completes, it will be added\r\n\t\t * to the item list.\r\n\t\t *\r\n\t\t * @param {string} value\r\n\t\t * @param {boolean} [triggerDropdown]\r\n\t\t * @param {function} [callback]\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tcreateItem: function(input, triggerDropdown) {\r\n\t\t\tvar self  = this;\r\n\t\t\tvar caret = self.caretPos;\r\n\t\t\tinput = input || $.trim(self.$control_input.val() || '');\r\n\t\r\n\t\t\tvar callback = arguments[arguments.length - 1];\r\n\t\t\tif (typeof callback !== 'function') callback = function() {};\r\n\t\r\n\t\t\tif (typeof triggerDropdown !== 'boolean') {\r\n\t\t\t\ttriggerDropdown = true;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (!self.canCreate(input)) {\r\n\t\t\t\tcallback();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\tself.lock();\r\n\t\r\n\t\t\tvar setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\r\n\t\t\t\tvar data = {};\r\n\t\t\t\tdata[self.settings.labelField] = input;\r\n\t\t\t\tdata[self.settings.valueField] = input;\r\n\t\t\t\treturn data;\r\n\t\t\t};\r\n\t\r\n\t\t\tvar create = once(function(data) {\r\n\t\t\t\tself.unlock();\r\n\t\r\n\t\t\t\tif (!data || typeof data !== 'object') return callback();\r\n\t\t\t\tvar value = hash_key(data[self.settings.valueField]);\r\n\t\t\t\tif (typeof value !== 'string') return callback();\r\n\t\r\n\t\t\t\tself.setTextboxValue('');\r\n\t\t\t\tself.addOption(data);\r\n\t\t\t\tself.setCaret(caret);\r\n\t\t\t\tself.addItem(value);\r\n\t\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\r\n\t\t\t\tcallback(data);\r\n\t\t\t});\r\n\t\r\n\t\t\tvar output = setup.apply(this, [input, create]);\r\n\t\t\tif (typeof output !== 'undefined') {\r\n\t\t\t\tcreate(output);\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Re-renders the selected item lists.\r\n\t\t */\r\n\t\trefreshItems: function() {\r\n\t\t\tthis.lastQuery = null;\r\n\t\r\n\t\t\tif (this.isSetup) {\r\n\t\t\t\tthis.addItem(this.items);\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.refreshState();\r\n\t\t\tthis.updateOriginalInput();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Updates all state-dependent attributes\r\n\t\t * and CSS classes.\r\n\t\t */\r\n\t\trefreshState: function() {\r\n\t\t\tthis.refreshValidityState();\r\n\t\t\tthis.refreshClasses();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Update the `required` attribute of both input and control input.\r\n\t\t *\r\n\t\t * The `required` property needs to be activated on the control input\r\n\t\t * for the error to be displayed at the right place. `required` also\r\n\t\t * needs to be temporarily deactivated on the input since the input is\r\n\t\t * hidden and can't show errors.\r\n\t\t */\r\n\t\trefreshValidityState: function() {\r\n\t\t\tif (!this.isRequired) return false;\r\n\t\r\n\t\t\tvar invalid = !this.items.length;\r\n\t\r\n\t\t\tthis.isInvalid = invalid;\r\n\t\t\tthis.$control_input.prop('required', invalid);\r\n\t\t\tthis.$input.prop('required', !invalid);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Updates all state-dependent CSS classes.\r\n\t\t */\r\n\t\trefreshClasses: function() {\r\n\t\t\tvar self     = this;\r\n\t\t\tvar isFull   = self.isFull();\r\n\t\t\tvar isLocked = self.isLocked;\r\n\t\r\n\t\t\tself.$wrapper\r\n\t\t\t\t.toggleClass('rtl', self.rtl);\r\n\t\r\n\t\t\tself.$control\r\n\t\t\t\t.toggleClass('focus', self.isFocused)\r\n\t\t\t\t.toggleClass('disabled', self.isDisabled)\r\n\t\t\t\t.toggleClass('required', self.isRequired)\r\n\t\t\t\t.toggleClass('invalid', self.isInvalid)\r\n\t\t\t\t.toggleClass('locked', isLocked)\r\n\t\t\t\t.toggleClass('full', isFull).toggleClass('not-full', !isFull)\r\n\t\t\t\t.toggleClass('input-active', self.isFocused && !self.isInputHidden)\r\n\t\t\t\t.toggleClass('dropdown-active', self.isOpen)\r\n\t\t\t\t.toggleClass('has-options', !$.isEmptyObject(self.options))\r\n\t\t\t\t.toggleClass('has-items', self.items.length > 0);\r\n\t\r\n\t\t\tself.$control_input.data('grow', !isFull && !isLocked);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Determines whether or not more items can be added\r\n\t\t * to the control without exceeding the user-defined maximum.\r\n\t\t *\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tisFull: function() {\r\n\t\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Refreshes the original <select> or <input>\r\n\t\t * element to reflect the current state.\r\n\t\t */\r\n\t\tupdateOriginalInput: function(opts) {\r\n\t\t\tvar i, n, options, label, self = this;\r\n\t\t\topts = opts || {};\r\n\t\r\n\t\t\tif (self.tagType === TAG_SELECT) {\r\n\t\t\t\toptions = [];\r\n\t\t\t\tfor (i = 0, n = self.items.length; i < n; i++) {\r\n\t\t\t\t\tlabel = self.options[self.items[i]][self.settings.labelField] || '';\r\n\t\t\t\t\toptions.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\r\n\t\t\t\t}\r\n\t\t\t\tif (!options.length && !this.$input.attr('multiple')) {\r\n\t\t\t\t\toptions.push('<option value=\"\" selected=\"selected\"></option>');\r\n\t\t\t\t}\r\n\t\t\t\tself.$input.html(options.join(''));\r\n\t\t\t} else {\r\n\t\t\t\tself.$input.val(self.getValue());\r\n\t\t\t\tself.$input.attr('value',self.$input.val());\r\n\t\t\t}\r\n\t\r\n\t\t\tif (self.isSetup) {\r\n\t\t\t\tif (!opts.silent) {\r\n\t\t\t\t\tself.trigger('change', self.$input.val());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Shows/hide the input placeholder depending\r\n\t\t * on if there items in the list already.\r\n\t\t */\r\n\t\tupdatePlaceholder: function() {\r\n\t\t\tif (!this.settings.placeholder) return;\r\n\t\t\tvar $input = this.$control_input;\r\n\t\r\n\t\t\tif (this.items.length) {\r\n\t\t\t\t$input.removeAttr('placeholder');\r\n\t\t\t} else {\r\n\t\t\t\t$input.attr('placeholder', this.settings.placeholder);\r\n\t\t\t}\r\n\t\t\t$input.triggerHandler('update', {force: true});\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Shows the autocomplete dropdown containing\r\n\t\t * the available options.\r\n\t\t */\r\n\t\topen: function() {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\r\n\t\t\tself.focus();\r\n\t\t\tself.isOpen = true;\r\n\t\t\tself.refreshState();\r\n\t\t\tself.$dropdown.css({visibility: 'hidden', display: 'block'});\r\n\t\t\tself.positionDropdown();\r\n\t\t\tself.$dropdown.css({visibility: 'visible'});\r\n\t\t\tself.trigger('dropdown_open', self.$dropdown);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Closes the autocomplete dropdown menu.\r\n\t\t */\r\n\t\tclose: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar trigger = self.isOpen;\r\n\t\r\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\r\n\t\t\t\tself.hideInput();\r\n\t\t\t\tself.$control_input.blur(); // close keyboard on iOS\r\n\t\t\t}\r\n\t\r\n\t\t\tself.isOpen = false;\r\n\t\t\tself.$dropdown.hide();\r\n\t\t\tself.setActiveOption(null);\r\n\t\t\tself.refreshState();\r\n\t\r\n\t\t\tif (trigger) self.trigger('dropdown_close', self.$dropdown);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Calculates and applies the appropriate\r\n\t\t * position of the dropdown.\r\n\t\t */\r\n\t\tpositionDropdown: function() {\r\n\t\t\tvar $control = this.$control;\r\n\t\t\tvar offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\r\n\t\t\toffset.top += $control.outerHeight(true);\r\n\t\r\n\t\t\tthis.$dropdown.css({\r\n\t\t\t\twidth : $control.outerWidth(),\r\n\t\t\t\ttop   : offset.top,\r\n\t\t\t\tleft  : offset.left\r\n\t\t\t});\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Resets / clears all selected items\r\n\t\t * from the control.\r\n\t\t *\r\n\t\t * @param {boolean} silent\r\n\t\t */\r\n\t\tclear: function(silent) {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (!self.items.length) return;\r\n\t\t\tself.$control.children(':not(input)').remove();\r\n\t\t\tself.items = [];\r\n\t\t\tself.lastQuery = null;\r\n\t\t\tself.setCaret(0);\r\n\t\t\tself.setActiveItem(null);\r\n\t\t\tself.updatePlaceholder();\r\n\t\t\tself.updateOriginalInput({silent: silent});\r\n\t\t\tself.refreshState();\r\n\t\t\tself.showInput();\r\n\t\t\tself.trigger('clear');\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * A helper method for inserting an element\r\n\t\t * at the current caret position.\r\n\t\t *\r\n\t\t * @param {object} $el\r\n\t\t */\r\n\t\tinsertAtCaret: function($el) {\r\n\t\t\tvar caret = Math.min(this.caretPos, this.items.length);\r\n\t\t\tif (caret === 0) {\r\n\t\t\t\tthis.$control.prepend($el);\r\n\t\t\t} else {\r\n\t\t\t\t$(this.$control[0].childNodes[caret]).before($el);\r\n\t\t\t}\r\n\t\t\tthis.setCaret(caret + 1);\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Removes the current selected item(s).\r\n\t\t *\r\n\t\t * @param {object} e (optional)\r\n\t\t * @returns {boolean}\r\n\t\t */\r\n\t\tdeleteSelection: function(e) {\r\n\t\t\tvar i, n, direction, selection, values, caret, option_select, $option_select, $tail;\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tdirection = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\r\n\t\t\tselection = getSelection(self.$control_input[0]);\r\n\t\r\n\t\t\tif (self.$activeOption && !self.settings.hideSelected) {\r\n\t\t\t\toption_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\r\n\t\t\t}\r\n\t\r\n\t\t\t// determine items that will be removed\r\n\t\t\tvalues = [];\r\n\t\r\n\t\t\tif (self.$activeItems.length) {\r\n\t\t\t\t$tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\r\n\t\t\t\tcaret = self.$control.children(':not(input)').index($tail);\r\n\t\t\t\tif (direction > 0) { caret++; }\r\n\t\r\n\t\t\t\tfor (i = 0, n = self.$activeItems.length; i < n; i++) {\r\n\t\t\t\t\tvalues.push($(self.$activeItems[i]).attr('data-value'));\r\n\t\t\t\t}\r\n\t\t\t\tif (e) {\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t}\r\n\t\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\r\n\t\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\r\n\t\t\t\t\tvalues.push(self.items[self.caretPos - 1]);\r\n\t\t\t\t} else if (direction > 0 && selection.start === self.$control_input.val().length) {\r\n\t\t\t\t\tvalues.push(self.items[self.caretPos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// allow the callback to abort\r\n\t\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\r\n\t\t\t// perform removal\r\n\t\t\tif (typeof caret !== 'undefined') {\r\n\t\t\t\tself.setCaret(caret);\r\n\t\t\t}\r\n\t\t\twhile (values.length) {\r\n\t\t\t\tself.removeItem(values.pop());\r\n\t\t\t}\r\n\t\r\n\t\t\tself.showInput();\r\n\t\t\tself.positionDropdown();\r\n\t\t\tself.refreshOptions(true);\r\n\t\r\n\t\t\t// select previous option\r\n\t\t\tif (option_select) {\r\n\t\t\t\t$option_select = self.getOption(option_select);\r\n\t\t\t\tif ($option_select.length) {\r\n\t\t\t\t\tself.setActiveOption($option_select);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Selects the previous / next item (depending\r\n\t\t * on the `direction` argument).\r\n\t\t *\r\n\t\t * > 0 - right\r\n\t\t * < 0 - left\r\n\t\t *\r\n\t\t * @param {int} direction\r\n\t\t * @param {object} e (optional)\r\n\t\t */\r\n\t\tadvanceSelection: function(direction, e) {\r\n\t\t\tvar tail, selection, idx, valueLength, cursorAtEdge, $tail;\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (direction === 0) return;\r\n\t\t\tif (self.rtl) direction *= -1;\r\n\t\r\n\t\t\ttail = direction > 0 ? 'last' : 'first';\r\n\t\t\tselection = getSelection(self.$control_input[0]);\r\n\t\r\n\t\t\tif (self.isFocused && !self.isInputHidden) {\r\n\t\t\t\tvalueLength = self.$control_input.val().length;\r\n\t\t\t\tcursorAtEdge = direction < 0\r\n\t\t\t\t\t? selection.start === 0 && selection.length === 0\r\n\t\t\t\t\t: selection.start === valueLength;\r\n\t\r\n\t\t\t\tif (cursorAtEdge && !valueLength) {\r\n\t\t\t\t\tself.advanceCaret(direction, e);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t$tail = self.$control.children('.active:' + tail);\r\n\t\t\t\tif ($tail.length) {\r\n\t\t\t\t\tidx = self.$control.children(':not(input)').index($tail);\r\n\t\t\t\t\tself.setActiveItem(null);\r\n\t\t\t\t\tself.setCaret(direction > 0 ? idx + 1 : idx);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Moves the caret left / right.\r\n\t\t *\r\n\t\t * @param {int} direction\r\n\t\t * @param {object} e (optional)\r\n\t\t */\r\n\t\tadvanceCaret: function(direction, e) {\r\n\t\t\tvar self = this, fn, $adj;\r\n\t\r\n\t\t\tif (direction === 0) return;\r\n\t\r\n\t\t\tfn = direction > 0 ? 'next' : 'prev';\r\n\t\t\tif (self.isShiftDown) {\r\n\t\t\t\t$adj = self.$control_input[fn]();\r\n\t\t\t\tif ($adj.length) {\r\n\t\t\t\t\tself.hideInput();\r\n\t\t\t\t\tself.setActiveItem($adj);\r\n\t\t\t\t\te && e.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tself.setCaret(self.caretPos + direction);\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Moves the caret to the specified index.\r\n\t\t *\r\n\t\t * @param {int} i\r\n\t\t */\r\n\t\tsetCaret: function(i) {\r\n\t\t\tvar self = this;\r\n\t\r\n\t\t\tif (self.settings.mode === 'single') {\r\n\t\t\t\ti = self.items.length;\r\n\t\t\t} else {\r\n\t\t\t\ti = Math.max(0, Math.min(self.items.length, i));\r\n\t\t\t}\r\n\t\r\n\t\t\tif(!self.isPending) {\r\n\t\t\t\t// the input must be moved by leaving it in place and moving the\r\n\t\t\t\t// siblings, due to the fact that focus cannot be restored once lost\r\n\t\t\t\t// on mobile webkit devices\r\n\t\t\t\tvar j, n, fn, $children, $child;\r\n\t\t\t\t$children = self.$control.children(':not(input)');\r\n\t\t\t\tfor (j = 0, n = $children.length; j < n; j++) {\r\n\t\t\t\t\t$child = $($children[j]).detach();\r\n\t\t\t\t\tif (j <  i) {\r\n\t\t\t\t\t\tself.$control_input.before($child);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.$control.append($child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tself.caretPos = i;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Disables user input on the control. Used while\r\n\t\t * items are being asynchronously created.\r\n\t\t */\r\n\t\tlock: function() {\r\n\t\t\tthis.close();\r\n\t\t\tthis.isLocked = true;\r\n\t\t\tthis.refreshState();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Re-enables user input on the control.\r\n\t\t */\r\n\t\tunlock: function() {\r\n\t\t\tthis.isLocked = false;\r\n\t\t\tthis.refreshState();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Disables user input on the control completely.\r\n\t\t * While disabled, it cannot receive focus.\r\n\t\t */\r\n\t\tdisable: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tself.$input.prop('disabled', true);\r\n\t\t\tself.$control_input.prop('disabled', true).prop('tabindex', -1);\r\n\t\t\tself.isDisabled = true;\r\n\t\t\tself.lock();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Enables the control so that it can respond\r\n\t\t * to focus and user input.\r\n\t\t */\r\n\t\tenable: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tself.$input.prop('disabled', false);\r\n\t\t\tself.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\r\n\t\t\tself.isDisabled = false;\r\n\t\t\tself.unlock();\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Completely destroys the control and\r\n\t\t * unbinds all event listeners so that it can\r\n\t\t * be garbage collected.\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tvar eventNS = self.eventNS;\r\n\t\t\tvar revertSettings = self.revertSettings;\r\n\t\r\n\t\t\tself.trigger('destroy');\r\n\t\t\tself.off();\r\n\t\t\tself.$wrapper.remove();\r\n\t\t\tself.$dropdown.remove();\r\n\t\r\n\t\t\tself.$input\r\n\t\t\t\t.html('')\r\n\t\t\t\t.append(revertSettings.$children)\r\n\t\t\t\t.removeAttr('tabindex')\r\n\t\t\t\t.removeClass('selectized')\r\n\t\t\t\t.attr({tabindex: revertSettings.tabindex})\r\n\t\t\t\t.show();\r\n\t\r\n\t\t\tself.$control_input.removeData('grow');\r\n\t\t\tself.$input.removeData('selectize');\r\n\t\r\n\t\t\t$(window).off(eventNS);\r\n\t\t\t$(document).off(eventNS);\r\n\t\t\t$(document.body).off(eventNS);\r\n\t\r\n\t\t\tdelete self.$input[0].selectize;\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * A helper method for rendering \"item\" and\r\n\t\t * \"option\" templates, given the data.\r\n\t\t *\r\n\t\t * @param {string} templateName\r\n\t\t * @param {object} data\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\trender: function(templateName, data) {\r\n\t\t\tvar value, id, label;\r\n\t\t\tvar html = '';\r\n\t\t\tvar cache = false;\r\n\t\t\tvar self = this;\r\n\t\t\tvar regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\r\n\t\r\n\t\t\tif (templateName === 'option' || templateName === 'item') {\r\n\t\t\t\tvalue = hash_key(data[self.settings.valueField]);\r\n\t\t\t\tcache = !!value;\r\n\t\t\t}\r\n\t\r\n\t\t\t// pull markup from cache if it exists\r\n\t\t\tif (cache) {\r\n\t\t\t\tif (!isset(self.renderCache[templateName])) {\r\n\t\t\t\t\tself.renderCache[templateName] = {};\r\n\t\t\t\t}\r\n\t\t\t\tif (self.renderCache[templateName].hasOwnProperty(value)) {\r\n\t\t\t\t\treturn self.renderCache[templateName][value];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// render markup\r\n\t\t\thtml = $(self.settings.render[templateName].apply(this, [data, escape_html]));\r\n\t\r\n\t\t\t// add mandatory attributes\r\n\t\t\tif (templateName === 'option' || templateName === 'option_create') {\r\n\t\t\t\thtml.attr('data-selectable', '');\r\n\t\t\t}\r\n\t\t\telse if (templateName === 'optgroup') {\r\n\t\t\t\tid = data[self.settings.optgroupValueField] || '';\r\n\t\t\t\thtml.attr('data-group', id);\r\n\t\t\t}\r\n\t\t\tif (templateName === 'option' || templateName === 'item') {\r\n\t\t\t\thtml.attr('data-value', value || '');\r\n\t\t\t}\r\n\t\r\n\t\t\t// update cache\r\n\t\t\tif (cache) {\r\n\t\t\t\tself.renderCache[templateName][value] = html[0];\r\n\t\t\t}\r\n\t\r\n\t\t\treturn html[0];\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Clears the render cache for a template. If\r\n\t\t * no template is given, clears all render\r\n\t\t * caches.\r\n\t\t *\r\n\t\t * @param {string} templateName\r\n\t\t */\r\n\t\tclearCache: function(templateName) {\r\n\t\t\tvar self = this;\r\n\t\t\tif (typeof templateName === 'undefined') {\r\n\t\t\t\tself.renderCache = {};\r\n\t\t\t} else {\r\n\t\t\t\tdelete self.renderCache[templateName];\r\n\t\t\t}\r\n\t\t},\r\n\t\r\n\t\t/**\r\n\t\t * Determines whether or not to display the\r\n\t\t * create item prompt, given a user input.\r\n\t\t *\r\n\t\t * @param {string} input\r\n\t\t * @return {boolean}\r\n\t\t */\r\n\t\tcanCreate: function(input) {\r\n\t\t\tvar self = this;\r\n\t\t\tif (!self.settings.create) return false;\r\n\t\t\tvar filter = self.settings.createFilter;\r\n\t\t\treturn input.length\r\n\t\t\t\t&& (typeof filter !== 'function' || filter.apply(self, [input]))\r\n\t\t\t\t&& (typeof filter !== 'string' || new RegExp(filter).test(input))\r\n\t\t\t\t&& (!(filter instanceof RegExp) || filter.test(input));\r\n\t\t}\r\n\t\r\n\t});\r\n\t\r\n\t\r\n\tSelectize.count = 0;\r\n\tSelectize.defaults = {\r\n\t\toptions: [],\r\n\t\toptgroups: [],\r\n\t\r\n\t\tplugins: [],\r\n\t\tdelimiter: ',',\r\n\t\tsplitOn: null, // regexp or string for splitting up values from a paste command\r\n\t\tpersist: true,\r\n\t\tdiacritics: true,\r\n\t\tcreate: false,\r\n\t\tcreateOnBlur: false,\r\n\t\tcreateFilter: null,\r\n\t\thighlight: true,\r\n\t\topenOnFocus: true,\r\n\t\tmaxOptions: 1000,\r\n\t\tmaxItems: null,\r\n\t\thideSelected: null,\r\n\t\taddPrecedence: false,\r\n\t\tselectOnTab: false,\r\n\t\tpreload: false,\r\n\t\tallowEmptyOption: false,\r\n\t\tcloseAfterSelect: false,\r\n\t\r\n\t\tscrollDuration: 60,\r\n\t\tloadThrottle: 300,\r\n\t\tloadingClass: 'loading',\r\n\t\r\n\t\tdataAttr: 'data-data',\r\n\t\toptgroupField: 'optgroup',\r\n\t\tvalueField: 'value',\r\n\t\tlabelField: 'text',\r\n\t\toptgroupLabelField: 'label',\r\n\t\toptgroupValueField: 'value',\r\n\t\tlockOptgroupOrder: false,\r\n\t\r\n\t\tsortField: '$order',\r\n\t\tsearchField: ['text'],\r\n\t\tsearchConjunction: 'and',\r\n\t\r\n\t\tmode: null,\r\n\t\twrapperClass: 'selectize-control',\r\n\t\tinputClass: 'selectize-input',\r\n\t\tdropdownClass: 'selectize-dropdown',\r\n\t\tdropdownContentClass: 'selectize-dropdown-content',\r\n\t\r\n\t\tdropdownParent: null,\r\n\t\r\n\t\tcopyClassesToDropdown: true,\r\n\t\r\n\t\t/*\r\n\t\tload                 : null, // function(query, callback) { ... }\r\n\t\tscore                : null, // function(search) { ... }\r\n\t\tonInitialize         : null, // function() { ... }\r\n\t\tonChange             : null, // function(value) { ... }\r\n\t\tonItemAdd            : null, // function(value, $item) { ... }\r\n\t\tonItemRemove         : null, // function(value) { ... }\r\n\t\tonClear              : null, // function() { ... }\r\n\t\tonOptionAdd          : null, // function(value, data) { ... }\r\n\t\tonOptionRemove       : null, // function(value) { ... }\r\n\t\tonOptionClear        : null, // function() { ... }\r\n\t\tonOptionGroupAdd     : null, // function(id, data) { ... }\r\n\t\tonOptionGroupRemove  : null, // function(id) { ... }\r\n\t\tonOptionGroupClear   : null, // function() { ... }\r\n\t\tonDropdownOpen       : null, // function($dropdown) { ... }\r\n\t\tonDropdownClose      : null, // function($dropdown) { ... }\r\n\t\tonType               : null, // function(str) { ... }\r\n\t\tonDelete             : null, // function(values) { ... }\r\n\t\t*/\r\n\t\r\n\t\trender: {\r\n\t\t\t/*\r\n\t\t\titem: null,\r\n\t\t\toptgroup: null,\r\n\t\t\toptgroup_header: null,\r\n\t\t\toption: null,\r\n\t\t\toption_create: null\r\n\t\t\t*/\r\n\t\t}\r\n\t};\r\n\t\r\n\t\r\n\t$.fn.selectize = function(settings_user) {\r\n\t\tvar defaults             = $.fn.selectize.defaults;\r\n\t\tvar settings             = $.extend({}, defaults, settings_user);\r\n\t\tvar attr_data            = settings.dataAttr;\r\n\t\tvar field_label          = settings.labelField;\r\n\t\tvar field_value          = settings.valueField;\r\n\t\tvar field_optgroup       = settings.optgroupField;\r\n\t\tvar field_optgroup_label = settings.optgroupLabelField;\r\n\t\tvar field_optgroup_value = settings.optgroupValueField;\r\n\t\r\n\t\t/**\r\n\t\t * Initializes selectize from a <input type=\"text\"> element.\r\n\t\t *\r\n\t\t * @param {object} $input\r\n\t\t * @param {object} settings_element\r\n\t\t */\r\n\t\tvar init_textbox = function($input, settings_element) {\r\n\t\t\tvar i, n, values, option;\r\n\t\r\n\t\t\tvar data_raw = $input.attr(attr_data);\r\n\t\r\n\t\t\tif (!data_raw) {\r\n\t\t\t\tvar value = $.trim($input.val() || '');\r\n\t\t\t\tif (!settings.allowEmptyOption && !value.length) return;\r\n\t\t\t\tvalues = value.split(settings.delimiter);\r\n\t\t\t\tfor (i = 0, n = values.length; i < n; i++) {\r\n\t\t\t\t\toption = {};\r\n\t\t\t\t\toption[field_label] = values[i];\r\n\t\t\t\t\toption[field_value] = values[i];\r\n\t\t\t\t\tsettings_element.options.push(option);\r\n\t\t\t\t}\r\n\t\t\t\tsettings_element.items = values;\r\n\t\t\t} else {\r\n\t\t\t\tsettings_element.options = JSON.parse(data_raw);\r\n\t\t\t\tfor (i = 0, n = settings_element.options.length; i < n; i++) {\r\n\t\t\t\t\tsettings_element.items.push(settings_element.options[i][field_value]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\t/**\r\n\t\t * Initializes selectize from a <select> element.\r\n\t\t *\r\n\t\t * @param {object} $input\r\n\t\t * @param {object} settings_element\r\n\t\t */\r\n\t\tvar init_select = function($input, settings_element) {\r\n\t\t\tvar i, n, tagName, $children, order = 0;\r\n\t\t\tvar options = settings_element.options;\r\n\t\t\tvar optionsMap = {};\r\n\t\r\n\t\t\tvar readData = function($el) {\r\n\t\t\t\tvar data = attr_data && $el.attr(attr_data);\r\n\t\t\t\tif (typeof data === 'string' && data.length) {\r\n\t\t\t\t\treturn JSON.parse(data);\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t};\r\n\t\r\n\t\t\tvar addOption = function($option, group) {\r\n\t\t\t\t$option = $($option);\r\n\t\r\n\t\t\t\tvar value = hash_key($option.val());\r\n\t\t\t\tif (!value && !settings.allowEmptyOption) return;\r\n\t\r\n\t\t\t\t// if the option already exists, it's probably been\r\n\t\t\t\t// duplicated in another optgroup. in this case, push\r\n\t\t\t\t// the current group to the \"optgroup\" property on the\r\n\t\t\t\t// existing option so that it's rendered in both places.\r\n\t\t\t\tif (optionsMap.hasOwnProperty(value)) {\r\n\t\t\t\t\tif (group) {\r\n\t\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\r\n\t\t\t\t\t\tif (!arr) {\r\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\r\n\t\t\t\t\t\t} else if (!$.isArray(arr)) {\r\n\t\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tarr.push(group);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar option             = readData($option) || {};\r\n\t\t\t\toption[field_label]    = option[field_label] || $option.text();\r\n\t\t\t\toption[field_value]    = option[field_value] || value;\r\n\t\t\t\toption[field_optgroup] = option[field_optgroup] || group;\r\n\t\r\n\t\t\t\toptionsMap[value] = option;\r\n\t\t\t\toptions.push(option);\r\n\t\r\n\t\t\t\tif ($option.is(':selected')) {\r\n\t\t\t\t\tsettings_element.items.push(value);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\tvar addGroup = function($optgroup) {\r\n\t\t\t\tvar i, n, id, optgroup, $options;\r\n\t\r\n\t\t\t\t$optgroup = $($optgroup);\r\n\t\t\t\tid = $optgroup.attr('label');\r\n\t\r\n\t\t\t\tif (id) {\r\n\t\t\t\t\toptgroup = readData($optgroup) || {};\r\n\t\t\t\t\toptgroup[field_optgroup_label] = id;\r\n\t\t\t\t\toptgroup[field_optgroup_value] = id;\r\n\t\t\t\t\tsettings_element.optgroups.push(optgroup);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t$options = $('option', $optgroup);\r\n\t\t\t\tfor (i = 0, n = $options.length; i < n; i++) {\r\n\t\t\t\t\taddOption($options[i], id);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\tsettings_element.maxItems = $input.attr('multiple') ? null : 1;\r\n\t\r\n\t\t\t$children = $input.children();\r\n\t\t\tfor (i = 0, n = $children.length; i < n; i++) {\r\n\t\t\t\ttagName = $children[i].tagName.toLowerCase();\r\n\t\t\t\tif (tagName === 'optgroup') {\r\n\t\t\t\t\taddGroup($children[i]);\r\n\t\t\t\t} else if (tagName === 'option') {\r\n\t\t\t\t\taddOption($children[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\treturn this.each(function() {\r\n\t\t\tif (this.selectize) return;\r\n\t\r\n\t\t\tvar instance;\r\n\t\t\tvar $input = $(this);\r\n\t\t\tvar tag_name = this.tagName.toLowerCase();\r\n\t\t\tvar placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\r\n\t\t\tif (!placeholder && !settings.allowEmptyOption) {\r\n\t\t\t\tplaceholder = $input.children('option[value=\"\"]').text();\r\n\t\t\t}\r\n\t\r\n\t\t\tvar settings_element = {\r\n\t\t\t\t'placeholder' : placeholder,\r\n\t\t\t\t'options'     : [],\r\n\t\t\t\t'optgroups'   : [],\r\n\t\t\t\t'items'       : []\r\n\t\t\t};\r\n\t\r\n\t\t\tif (tag_name === 'select') {\r\n\t\t\t\tinit_select($input, settings_element);\r\n\t\t\t} else {\r\n\t\t\t\tinit_textbox($input, settings_element);\r\n\t\t\t}\r\n\t\r\n\t\t\tinstance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.selectize.defaults = Selectize.defaults;\r\n\t$.fn.selectize.support = {\r\n\t\tvalidity: SUPPORTS_VALIDITY_API\r\n\t};\r\n\t\r\n\t\r\n\tSelectize.define('drag_drop', function(options) {\r\n\t\tif (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\r\n\t\tif (this.settings.mode !== 'multi') return;\r\n\t\tvar self = this;\r\n\t\r\n\t\tself.lock = (function() {\r\n\t\t\tvar original = self.lock;\r\n\t\t\treturn function() {\r\n\t\t\t\tvar sortable = self.$control.data('sortable');\r\n\t\t\t\tif (sortable) sortable.disable();\r\n\t\t\t\treturn original.apply(self, arguments);\r\n\t\t\t};\r\n\t\t})();\r\n\t\r\n\t\tself.unlock = (function() {\r\n\t\t\tvar original = self.unlock;\r\n\t\t\treturn function() {\r\n\t\t\t\tvar sortable = self.$control.data('sortable');\r\n\t\t\t\tif (sortable) sortable.enable();\r\n\t\t\t\treturn original.apply(self, arguments);\r\n\t\t\t};\r\n\t\t})();\r\n\t\r\n\t\tself.setup = (function() {\r\n\t\t\tvar original = self.setup;\r\n\t\t\treturn function() {\r\n\t\t\t\toriginal.apply(this, arguments);\r\n\t\r\n\t\t\t\tvar $control = self.$control.sortable({\r\n\t\t\t\t\titems: '[data-value]',\r\n\t\t\t\t\tforcePlaceholderSize: true,\r\n\t\t\t\t\tdisabled: self.isLocked,\r\n\t\t\t\t\tstart: function(e, ui) {\r\n\t\t\t\t\t\tui.placeholder.css('width', ui.helper.css('width'));\r\n\t\t\t\t\t\t$control.css({overflow: 'visible'});\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstop: function() {\r\n\t\t\t\t\t\t$control.css({overflow: 'hidden'});\r\n\t\t\t\t\t\tvar active = self.$activeItems ? self.$activeItems.slice() : null;\r\n\t\t\t\t\t\tvar values = [];\r\n\t\t\t\t\t\t$control.children('[data-value]').each(function() {\r\n\t\t\t\t\t\t\tvalues.push($(this).attr('data-value'));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.setValue(values);\r\n\t\t\t\t\t\tself.setActiveItem(active);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t})();\r\n\t\r\n\t});\r\n\t\r\n\tSelectize.define('dropdown_header', function(options) {\r\n\t\tvar self = this;\r\n\t\r\n\t\toptions = $.extend({\r\n\t\t\ttitle         : 'Untitled',\r\n\t\t\theaderClass   : 'selectize-dropdown-header',\r\n\t\t\ttitleRowClass : 'selectize-dropdown-header-title',\r\n\t\t\tlabelClass    : 'selectize-dropdown-header-label',\r\n\t\t\tcloseClass    : 'selectize-dropdown-header-close',\r\n\t\r\n\t\t\thtml: function(data) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\r\n\t\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\r\n\t\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\r\n\t\t\t\t\t\t\t'<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\r\n\t\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t'</div>'\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, options);\r\n\t\r\n\t\tself.setup = (function() {\r\n\t\t\tvar original = self.setup;\r\n\t\t\treturn function() {\r\n\t\t\t\toriginal.apply(self, arguments);\r\n\t\t\t\tself.$dropdown_header = $(options.html(options));\r\n\t\t\t\tself.$dropdown.prepend(self.$dropdown_header);\r\n\t\t\t};\r\n\t\t})();\r\n\t\r\n\t});\r\n\t\r\n\tSelectize.define('optgroup_columns', function(options) {\r\n\t\tvar self = this;\r\n\t\r\n\t\toptions = $.extend({\r\n\t\t\tequalizeWidth  : true,\r\n\t\t\tequalizeHeight : true\r\n\t\t}, options);\r\n\t\r\n\t\tthis.getAdjacentOption = function($option, direction) {\r\n\t\t\tvar $options = $option.closest('[data-group]').find('[data-selectable]');\r\n\t\t\tvar index    = $options.index($option) + direction;\r\n\t\r\n\t\t\treturn index >= 0 && index < $options.length ? $options.eq(index) : $();\r\n\t\t};\r\n\t\r\n\t\tthis.onKeyDown = (function() {\r\n\t\t\tvar original = self.onKeyDown;\r\n\t\t\treturn function(e) {\r\n\t\t\t\tvar index, $option, $options, $optgroup;\r\n\t\r\n\t\t\t\tif (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\r\n\t\t\t\t\tself.ignoreHover = true;\r\n\t\t\t\t\t$optgroup = this.$activeOption.closest('[data-group]');\r\n\t\t\t\t\tindex = $optgroup.find('[data-selectable]').index(this.$activeOption);\r\n\t\r\n\t\t\t\t\tif(e.keyCode === KEY_LEFT) {\r\n\t\t\t\t\t\t$optgroup = $optgroup.prev('[data-group]');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$optgroup = $optgroup.next('[data-group]');\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t$options = $optgroup.find('[data-selectable]');\r\n\t\t\t\t\t$option  = $options.eq(Math.min($options.length - 1, index));\r\n\t\t\t\t\tif ($option.length) {\r\n\t\t\t\t\t\tthis.setActiveOption($option);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn original.apply(this, arguments);\r\n\t\t\t};\r\n\t\t})();\r\n\t\r\n\t\tvar getScrollbarWidth = function() {\r\n\t\t\tvar div;\r\n\t\t\tvar width = getScrollbarWidth.width;\r\n\t\t\tvar doc = document;\r\n\t\r\n\t\t\tif (typeof width === 'undefined') {\r\n\t\t\t\tdiv = doc.createElement('div');\r\n\t\t\t\tdiv.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\r\n\t\t\t\tdiv = div.firstChild;\r\n\t\t\t\tdoc.body.appendChild(div);\r\n\t\t\t\twidth = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\r\n\t\t\t\tdoc.body.removeChild(div);\r\n\t\t\t}\r\n\t\t\treturn width;\r\n\t\t};\r\n\t\r\n\t\tvar equalizeSizes = function() {\r\n\t\t\tvar i, n, height_max, width, width_last, width_parent, $optgroups;\r\n\t\r\n\t\t\t$optgroups = $('[data-group]', self.$dropdown_content);\r\n\t\t\tn = $optgroups.length;\r\n\t\t\tif (!n || !self.$dropdown_content.width()) return;\r\n\t\r\n\t\t\tif (options.equalizeHeight) {\r\n\t\t\t\theight_max = 0;\r\n\t\t\t\tfor (i = 0; i < n; i++) {\r\n\t\t\t\t\theight_max = Math.max(height_max, $optgroups.eq(i).height());\r\n\t\t\t\t}\r\n\t\t\t\t$optgroups.css({height: height_max});\r\n\t\t\t}\r\n\t\r\n\t\t\tif (options.equalizeWidth) {\r\n\t\t\t\twidth_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\r\n\t\t\t\twidth = Math.round(width_parent / n);\r\n\t\t\t\t$optgroups.css({width: width});\r\n\t\t\t\tif (n > 1) {\r\n\t\t\t\t\twidth_last = width_parent - width * (n - 1);\r\n\t\t\t\t\t$optgroups.eq(n - 1).css({width: width_last});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\r\n\t\tif (options.equalizeHeight || options.equalizeWidth) {\r\n\t\t\thook.after(this, 'positionDropdown', equalizeSizes);\r\n\t\t\thook.after(this, 'refreshOptions', equalizeSizes);\r\n\t\t}\r\n\t\r\n\t\r\n\t});\r\n\t\r\n\tSelectize.define('remove_button', function(options) {\r\n\t\toptions = $.extend({\r\n\t\t\t\tlabel     : '&times;',\r\n\t\t\t\ttitle     : 'Remove',\r\n\t\t\t\tclassName : 'remove',\r\n\t\t\t\tappend    : true\r\n\t\t\t}, options);\r\n\t\r\n\t\t\tvar singleClose = function(thisRef, options) {\r\n\t\r\n\t\t\t\toptions.className = 'remove-single';\r\n\t\r\n\t\t\t\tvar self = thisRef;\r\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\r\n\t\r\n\t\t\t\t/**\r\n\t\t\t\t * Appends an element as a child (with raw HTML).\r\n\t\t\t\t *\r\n\t\t\t\t * @param {string} html_container\r\n\t\t\t\t * @param {string} html_element\r\n\t\t\t\t * @return {string}\r\n\t\t\t\t */\r\n\t\t\t\tvar append = function(html_container, html_element) {\r\n\t\t\t\t\treturn html_container + html_element;\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tthisRef.setup = (function() {\r\n\t\t\t\t\tvar original = self.setup;\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\t// override the item rendering method to add the button to each\r\n\t\t\t\t\t\tif (options.append) {\r\n\t\t\t\t\t\t\tvar id = $(self.$input.context).attr('id');\r\n\t\t\t\t\t\t\tvar selectizer = $('#'+id);\r\n\t\r\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\r\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\r\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\r\n\t\r\n\t\t\t\t\t\t// add event listener\r\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tif (self.isLocked) return;\r\n\t\r\n\t\t\t\t\t\t\tself.clear();\r\n\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t};\r\n\t\t\t\t})();\r\n\t\t\t};\r\n\t\r\n\t\t\tvar multiClose = function(thisRef, options) {\r\n\t\r\n\t\t\t\tvar self = thisRef;\r\n\t\t\t\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\r\n\t\r\n\t\t\t\t/**\r\n\t\t\t\t * Appends an element as a child (with raw HTML).\r\n\t\t\t\t *\r\n\t\t\t\t * @param {string} html_container\r\n\t\t\t\t * @param {string} html_element\r\n\t\t\t\t * @return {string}\r\n\t\t\t\t */\r\n\t\t\t\tvar append = function(html_container, html_element) {\r\n\t\t\t\t\tvar pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\r\n\t\t\t\t\treturn html_container.substring(0, pos) + html_element + html_container.substring(pos);\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tthisRef.setup = (function() {\r\n\t\t\t\t\tvar original = self.setup;\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\t// override the item rendering method to add the button to each\r\n\t\t\t\t\t\tif (options.append) {\r\n\t\t\t\t\t\t\tvar render_item = self.settings.render.item;\r\n\t\t\t\t\t\t\tself.settings.render.item = function(data) {\r\n\t\t\t\t\t\t\t\treturn append(render_item.apply(thisRef, arguments), html);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\toriginal.apply(thisRef, arguments);\r\n\t\r\n\t\t\t\t\t\t// add event listener\r\n\t\t\t\t\t\tthisRef.$control.on('click', '.' + options.className, function(e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tif (self.isLocked) return;\r\n\t\r\n\t\t\t\t\t\t\tvar $item = $(e.currentTarget).parent();\r\n\t\t\t\t\t\t\tself.setActiveItem($item);\r\n\t\t\t\t\t\t\tif (self.deleteSelection()) {\r\n\t\t\t\t\t\t\t\tself.setCaret(self.items.length);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t};\r\n\t\t\t\t})();\r\n\t\t\t};\r\n\t\r\n\t\t\tif (this.settings.mode === 'single') {\r\n\t\t\t\tsingleClose(this, options);\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tmultiClose(this, options);\r\n\t\t\t}\r\n\t});\r\n\t\r\n\t\r\n\tSelectize.define('restore_on_backspace', function(options) {\r\n\t\tvar self = this;\r\n\t\r\n\t\toptions.text = options.text || function(option) {\r\n\t\t\treturn option[this.settings.labelField];\r\n\t\t};\r\n\t\r\n\t\tthis.onKeyDown = (function() {\r\n\t\t\tvar original = self.onKeyDown;\r\n\t\t\treturn function(e) {\r\n\t\t\t\tvar index, option;\r\n\t\t\t\tif (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\r\n\t\t\t\t\tindex = this.caretPos - 1;\r\n\t\t\t\t\tif (index >= 0 && index < this.items.length) {\r\n\t\t\t\t\t\toption = this.options[this.items[index]];\r\n\t\t\t\t\t\tif (this.deleteSelection(e)) {\r\n\t\t\t\t\t\t\tthis.setTextboxValue(options.text.apply(this, [option]));\r\n\t\t\t\t\t\t\tthis.refreshOptions(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn original.apply(this, arguments);\r\n\t\t\t};\r\n\t\t})();\r\n\t});\r\n\t\r\n\r\n\treturn Selectize;\r\n}));","( function( $ ) {\n\n\t$(document).ready( function() {\n\n\t\t$( '.underdev-settings .pretty-select' ).selectize();\n\n\t} );\n\n} )( jQuery );\n"]}